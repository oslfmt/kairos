{
  "contractName": "SimpleCentralizedArbitrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputes",
      "outputs": [
        {
          "internalType": "contract IArbitrable",
          "name": "arbitrated",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "choices",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        },
        {
          "internalType": "enum IArbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_choices",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "internalType": "enum IArbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputes\",\"outputs\":[{\"internalType\":\"contract IArbitrable\",\"name\":\"arbitrated\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"choices\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"internalType\":\"enum IArbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"_0\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"_0\":\"The start of the period.\",\"_1\":\"The end of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"_0\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"simple arbitrator example. Does NOT implement appeal functionality\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/victor/kairos/backend/contracts/SimpleCentralizedArbitrator.sol\":\"SimpleCentralizedArbitrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/victor/kairos/backend/contracts/IArbitrable.sol\":{\"keccak256\":\"0x1f239a63bd2b7bb743aff20da0cf4ad46408d77f34ef2b9a9002df5dbc827311\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b296dc7ce9da41ae2405d454aa360dc85d289697a85972925f3cc97a405326a\",\"dweb:/ipfs/QmRzmwGGNuwTq9WZucbr3wQipsko6Ymgey7iW7NwQcjx2L\"]},\"/home/victor/kairos/backend/contracts/IArbitrator.sol\":{\"keccak256\":\"0xacc551e354d7a391dc8231800d2e35811d4def00d6174aea0716ee9e1be88dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50d298f7d92e9e6200bd327e4f5c6ff905233a8cb7101a0eb28e350535a7c96f\",\"dweb:/ipfs/QmYP2Bs47tj85mRH26Tj6YE2qQ9vqG12FgYsnp4NwVL8jn\"]},\"/home/victor/kairos/backend/contracts/SimpleCentralizedArbitrator.sol\":{\"keccak256\":\"0xeada8845abf4a68a0612786af657d1964ad3be86b220d750cab946bc30af5e15\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174fb47fa2cf0aeac5a45e0a1d44e8dd360836c6e2419d8d0731ff371054b6b6\",\"dweb:/ipfs/QmXMMdcPUFAsdUbPY4nJsqcAVsiaXUYKroxDvqY7H6raHE\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b50611183806100606000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610195578063afe15cfb146101c0578063c13517e1146101fe578063f23f16e61461022e578063f7434ea91461026b57610091565b806310f169e8146100965780631c3db16d146100d3578063311a6c561461011057806349912f8814610139578063564a565d14610155575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610b2b565b6102a8565b6040516100ca9190610e5c565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610b2b565b61030a565b6040516101079190610f17565b60405180910390f35b34801561011c57600080fd5b5061013760048036038101906101329190610bac565b61035f565b005b610153600480360381019061014e9190610b54565b6106b4565b005b34801561016157600080fd5b5061017c60048036038101906101779190610b2b565b610706565b60405161018c9493929190610e17565b60405180910390f35b3480156101a157600080fd5b506101aa610773565b6040516101b79190610dfc565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e29190610b2b565b610797565b6040516101f5929190610f32565b60405180910390f35b61021860048036038101906102139190610b54565b6107a6565b6040516102259190610f17565b60405180910390f35b34801561023a57600080fd5b5061025560048036038101906102509190610b54565b6109e5565b6040516102629190610f17565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d9190610aea565b610a11565b60405161029f9190610f17565b60405180910390f35b6000600182815481106102e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020160030160009054906101000a900460ff169050919050565b600060018281548110610346577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060040201600201549050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e490610ef7565b60405180910390fd5b600060018381548110610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906004020190508060010154821115610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790610ed7565b60405180910390fd5b600060028111156104ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160030160009054906101000a900460ff166002811115610504577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b90610e97565b60405180910390fd5b81816002018190555060028160030160006101000a81548160ff0219169083600281111561059b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6105f260405180602001604052806000815250610a11565b9081150290604051600060405180830381858888f1935050505015801561061d573d6000803e3d6000fd5b508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663311a6c5684846040518363ffffffff1660e01b815260040161067d929190610f32565b600060405180830381600087803b15801561069757600080fd5b505af11580156106ab573d6000803e3d6000fd5b50505050505050565b6106bf8383836109e5565b341015610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f890610eb7565b60405180910390fd5b505050565b6001818154811061071657600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008091509150915091565b60006107f583838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610a11565b341015610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90610e77565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020016103e88152602001600060028111156108a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836002811115610980577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050600180805490506109989190610fcd565b90503373ffffffffffffffffffffffffffffffffffffffff16817f141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed99560405160405180910390a39392505050565b60007f040000000000000000000000000000000000000000000000000000000000000090509392505050565b600067016345785d8a00009050919050565b6000610a36610a3184610f8c565b610f5b565b905082815260208101848484011115610a4e57600080fd5b610a59848285611086565b509392505050565b60008083601f840112610a7357600080fd5b8235905067ffffffffffffffff811115610a8c57600080fd5b602083019150836001820283011115610aa457600080fd5b9250929050565b600082601f830112610abc57600080fd5b8135610acc848260208601610a23565b91505092915050565b600081359050610ae481611136565b92915050565b600060208284031215610afc57600080fd5b600082013567ffffffffffffffff811115610b1657600080fd5b610b2284828501610aab565b91505092915050565b600060208284031215610b3d57600080fd5b6000610b4b84828501610ad5565b91505092915050565b600080600060408486031215610b6957600080fd5b6000610b7786828701610ad5565b935050602084013567ffffffffffffffff811115610b9457600080fd5b610ba086828701610a61565b92509250509250925092565b60008060408385031215610bbf57600080fd5b6000610bcd85828601610ad5565b9250506020610bde85828601610ad5565b9150509250929050565b610bf181611001565b82525050565b610c0081611050565b82525050565b610c0f81611074565b82525050565b6000610c22602983610fbc565b91507f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460008301527f696f6e20636f73747300000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c88602283610fbc565b91507f44697370757465206973206e6f742077616974696e672061726269747261746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cee602483610fbc565b91507f4e6f7420656e6f7567682045544820746f20636f7665722061707065616c206360008301527f6f737473000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d54601483610fbc565b91507f52756c696e67206f7574206f6620626f756e64730000000000000000000000006000830152602082019050919050565b6000610d94603283610fbc565b91507f4f6e6c7920746865206f776e6572206f66207468697320636f6e74726163742060008301527f63616e20657865637574652072756c696e6700000000000000000000000000006020830152604082019050919050565b610df681611046565b82525050565b6000602082019050610e116000830184610be8565b92915050565b6000608082019050610e2c6000830187610bf7565b610e396020830186610ded565b610e466040830185610ded565b610e536060830184610c06565b95945050505050565b6000602082019050610e716000830184610c06565b92915050565b60006020820190508181036000830152610e9081610c15565b9050919050565b60006020820190508181036000830152610eb081610c7b565b9050919050565b60006020820190508181036000830152610ed081610ce1565b9050919050565b60006020820190508181036000830152610ef081610d47565b9050919050565b60006020820190508181036000830152610f1081610d87565b9050919050565b6000602082019050610f2c6000830184610ded565b92915050565b6000604082019050610f476000830185610ded565b610f546020830184610ded565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715610f8257610f816110f3565b5b8060405250919050565b600067ffffffffffffffff821115610fa757610fa66110f3565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000610fd882611046565b9150610fe383611046565b925082821015610ff657610ff5611095565b5b828203905092915050565b600061100c82611026565b9050919050565b600081905061102182611122565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061105b82611062565b9050919050565b600061106d82611026565b9050919050565b600061107f82611013565b9050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60038110611133576111326110c4565b5b50565b61113f81611046565b811461114a57600080fd5b5056fea2646970667358221220e80ef48570fce2c6abcef7dfdd0e59a511bd4413b595588eeea9701bfc1ea68364736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11891:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "90:259:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "100:73:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "165:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "124:40:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "124:48:8"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "109:14:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "109:64:8"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "100:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "189:5:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "196:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "182:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "182:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "182:21:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "212:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "227:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "223:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:16:8"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "216:3:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "258:3:8"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "263:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:16:8"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "272:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "251:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:25:8"
                  },
                  "nodeType": "YulIf",
                  "src": "248:2:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "326:3:8"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "331:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "336:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "302:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "302:41:8"
                }
              ]
            },
            "name": "abi_decode_available_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "63:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "68:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "76:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "84:5:8",
                "type": ""
              }
            ],
            "src": "7:342:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "442:277:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "491:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "500:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "503:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "493:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "493:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "493:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "470:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "478:4:8",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "466:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "466:17:8"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "485:3:8"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "462:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "462:27:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:35:8"
                  },
                  "nodeType": "YulIf",
                  "src": "452:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "516:30:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "539:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "526:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "589:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "598:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "601:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "591:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "591:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "591:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "561:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "569:18:8",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "558:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "558:30:8"
                  },
                  "nodeType": "YulIf",
                  "src": "555:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "614:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "630:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "638:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "626:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:17:8"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "614:8:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "697:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "709:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "662:8:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "676:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "684:4:8",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "672:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "672:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "658:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "658:32:8"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "692:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "655:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:41:8"
                  },
                  "nodeType": "YulIf",
                  "src": "652:2:8"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "409:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "417:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "425:8:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "435:6:8",
                "type": ""
              }
            ],
            "src": "368:351:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "799:210:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "848:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "857:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "860:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "850:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "850:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "850:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "827:6:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "835:4:8",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "823:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "823:17:8"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "842:3:8"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:27:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:35:8"
                  },
                  "nodeType": "YulIf",
                  "src": "809:2:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "873:34:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "900:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "887:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:20:8"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "877:6:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "916:87:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "976:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "984:4:8",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "972:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "972:17:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "991:6:8"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "925:46:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:78:8"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "916:5:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "777:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "785:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "793:5:8",
                "type": ""
              }
            ],
            "src": "738:271:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1099:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1086:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1077:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1142:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1115:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1115:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1115:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1045:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1053:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1061:5:8",
                "type": ""
              }
            ],
            "src": "1015:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:298:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1281:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1290:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1293:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1283:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1283:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1256:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1265:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1252:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1252:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1277:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1248:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1248:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1245:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1307:219:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1322:45:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1353:9:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1364:1:8",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1349:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1349:17:8"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1336:12:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:31:8"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1326:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1414:16:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1423:1:8",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1426:1:8",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1416:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1416:12:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1416:12:8"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1386:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1394:18:8",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1383:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1383:30:8"
                      },
                      "nodeType": "YulIf",
                      "src": "1380:2:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1444:72:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1488:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1499:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1484:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1484:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1508:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1454:29:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:62:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1444:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1205:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1216:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1228:6:8",
                "type": ""
              }
            ],
            "src": "1160:373:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1605:196:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1651:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1660:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1663:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1653:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1653:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1653:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1626:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1635:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1622:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1622:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1647:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1618:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1618:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1615:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1677:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1692:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1706:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1696:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1721:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1756:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1767:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1752:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1752:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1776:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1731:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1731:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1721:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1575:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1586:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1598:6:8",
                "type": ""
              }
            ],
            "src": "1539:262:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1909:436:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1955:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1964:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1967:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1957:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1957:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1957:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1930:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1939:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1926:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1951:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1922:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1919:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1981:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1996:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2010:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2000:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2025:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2060:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2071:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2056:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2056:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2080:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2035:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2025:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2108:230:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2123:46:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2154:9:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2165:2:8",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2150:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2150:18:8"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2137:12:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2137:32:8"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2127:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2216:16:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2225:1:8",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2228:1:8",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2218:6:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2218:12:8"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2218:12:8"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2188:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2196:18:8",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2185:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2185:30:8"
                      },
                      "nodeType": "YulIf",
                      "src": "2182:2:8"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2246:82:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2300:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2311:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2296:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2296:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2320:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2264:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2264:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2246:6:8"
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2254:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1863:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1874:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1886:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1894:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1902:6:8",
                "type": ""
              }
            ],
            "src": "1807:538:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2434:324:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2480:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2489:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2492:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2482:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2482:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2482:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2455:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2464:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2451:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2451:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2476:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2447:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2447:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "2444:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2506:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2521:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2535:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2525:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2550:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2585:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2596:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2581:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2581:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2605:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2560:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2560:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2550:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2633:118:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2648:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2662:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2652:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2678:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2713:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2724:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2709:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2709:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2733:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2688:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2688:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2678:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2396:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2407:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2419:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2427:6:8",
                "type": ""
              }
            ],
            "src": "2351:407:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2829:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2846:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2869:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2851:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2851:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2839:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2839:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2817:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2824:3:8",
                "type": ""
              }
            ],
            "src": "2764:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2972:85:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2989:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3044:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IArbitrable_$270_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2994:49:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2994:56:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2982:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2982:69:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2982:69:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IArbitrable_$270_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2960:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2967:3:8",
                "type": ""
              }
            ],
            "src": "2888:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3143:81:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3160:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3211:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_DisputeStatus_$279_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3165:45:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:52:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3153:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3153:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3153:65:8"
                }
              ]
            },
            "name": "abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3131:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3138:3:8",
                "type": ""
              }
            ],
            "src": "3063:161:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3376:227:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3386:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3452:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3457:2:8",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3393:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3393:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3481:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3486:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3477:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3477:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3490:34:8",
                        "type": "",
                        "value": "Not enough ETH to cover arbitrat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3470:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3470:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3546:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3551:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3542:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3542:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3556:11:8",
                        "type": "",
                        "value": "ion costs"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3535:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3535:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3535:33:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3578:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3589:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3594:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3585:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3578:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3364:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3372:3:8",
                "type": ""
              }
            ],
            "src": "3230:373:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3755:220:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3765:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3831:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3836:2:8",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3772:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3765:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3860:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3865:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3856:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3856:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3869:34:8",
                        "type": "",
                        "value": "Dispute is not waiting arbitrati"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3849:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3849:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3849:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3925:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3930:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3921:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3921:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3935:4:8",
                        "type": "",
                        "value": "on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3914:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3914:26:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3914:26:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3950:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3961:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3966:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3957:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3957:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3950:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3743:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3751:3:8",
                "type": ""
              }
            ],
            "src": "3609:366:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4127:222:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4137:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4203:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4208:2:8",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4144:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4144:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4137:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4232:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4237:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4228:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4241:34:8",
                        "type": "",
                        "value": "Not enough ETH to cover appeal c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4221:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4221:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4221:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4297:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4302:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4293:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4293:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4307:6:8",
                        "type": "",
                        "value": "osts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4286:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4286:28:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4286:28:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4324:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4335:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4340:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4331:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4331:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4324:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4115:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4123:3:8",
                "type": ""
              }
            ],
            "src": "3981:368:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4501:172:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4511:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4577:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4582:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4518:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4518:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4511:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4606:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4611:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4602:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4602:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4615:22:8",
                        "type": "",
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4595:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4595:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4595:43:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4648:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4659:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4664:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4655:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4655:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4648:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4489:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4497:3:8",
                "type": ""
              }
            ],
            "src": "4355:318:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4825:236:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4835:74:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4901:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4906:2:8",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4842:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4842:67:8"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4835:3:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4930:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4935:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4926:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4926:11:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4939:34:8",
                        "type": "",
                        "value": "Only the owner of this contract "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4919:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4919:55:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4919:55:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4995:3:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5000:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4991:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4991:12:8"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5005:20:8",
                        "type": "",
                        "value": "can execute ruling"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4984:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4984:42:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4984:42:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5036:19:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5047:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5052:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5043:12:8"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5036:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4813:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4821:3:8",
                "type": ""
              }
            ],
            "src": "4679:382:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5132:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5149:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5172:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5154:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5154:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5142:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5142:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5142:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5120:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5127:3:8",
                "type": ""
              }
            ],
            "src": "5067:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5289:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5299:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5311:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5322:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5307:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5299:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5379:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5392:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5403:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5388:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5388:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5335:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5335:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5261:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5273:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5284:4:8",
                "type": ""
              }
            ],
            "src": "5191:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5635:405:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5645:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5657:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5668:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5653:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5653:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5645:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5745:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5758:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5769:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5754:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5754:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IArbitrable_$270_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5682:62:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5682:90:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5682:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5826:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5839:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5850:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5835:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5835:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5782:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5782:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5908:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5921:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5932:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5917:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5917:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5864:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5864:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6005:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6018:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6029:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6014:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6014:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5946:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5946:87:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5946:87:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IArbitrable_$270_t_uint256_t_uint256_t_enum$_DisputeStatus_$279__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5583:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5595:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5603:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5611:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5619:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5630:4:8",
                "type": ""
              }
            ],
            "src": "5419:621:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6159:139:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6169:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6181:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6192:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6177:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6177:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6169:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6264:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6277:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6288:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6273:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6273:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6205:58:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6205:86:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6205:86:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_DisputeStatus_$279__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6131:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6143:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6154:4:8",
                "type": ""
              }
            ],
            "src": "6046:252:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6475:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6485:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6497:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6508:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6493:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6485:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6532:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6543:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6528:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6528:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6551:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6557:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6547:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6547:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6521:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6577:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6711:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6585:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6585:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6577:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6455:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6470:4:8",
                "type": ""
              }
            ],
            "src": "6304:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6900:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6910:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6922:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6933:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6918:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6918:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6910:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6957:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6968:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6953:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6953:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6976:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6982:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6972:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6972:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6946:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6946:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7002:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7136:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7010:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7010:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7002:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6880:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6895:4:8",
                "type": ""
              }
            ],
            "src": "6729:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7325:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7335:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7347:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7358:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7343:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7343:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7335:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7382:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7393:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7378:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7378:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7401:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7407:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7397:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7397:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7371:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7371:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7371:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7427:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7561:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7435:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7427:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7305:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7320:4:8",
                "type": ""
              }
            ],
            "src": "7154:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7750:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7760:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7772:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7783:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7768:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7760:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7807:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7818:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7803:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7803:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7826:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7832:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7822:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7822:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7796:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7796:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7796:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7852:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7986:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7860:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7860:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7852:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7730:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7745:4:8",
                "type": ""
              }
            ],
            "src": "7579:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8175:248:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8185:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8197:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8208:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8193:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8193:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8185:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8232:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8243:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8228:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8228:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8251:4:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8257:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8247:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8247:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8221:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8221:47:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8221:47:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8277:139:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8411:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8285:124:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8285:131:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8277:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8155:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8170:4:8",
                "type": ""
              }
            ],
            "src": "8004:419:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8527:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8537:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8549:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8560:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8545:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8537:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8617:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8630:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8641:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8626:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8626:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8573:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8573:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8573:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8499:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8511:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8522:4:8",
                "type": ""
              }
            ],
            "src": "8429:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8783:206:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8793:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8805:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8816:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8801:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8801:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8793:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8873:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8886:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8897:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8882:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8882:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8829:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8829:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8829:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8954:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8967:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8978:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8963:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8963:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8910:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8910:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8910:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8747:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8759:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8767:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8778:4:8",
                "type": ""
              }
            ],
            "src": "8657:332:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9035:243:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9045:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9061:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9055:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9055:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "9045:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9073:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "9095:6:8"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "9103:4:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9091:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9091:17:8"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "9077:10:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9219:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9221:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9221:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9221:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9162:10:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9174:18:8",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9159:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9159:34:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "9198:10:8"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9210:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "9195:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9195:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9156:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9156:62:8"
                  },
                  "nodeType": "YulIf",
                  "src": "9153:2:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9257:2:8",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "9261:10:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9250:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9250:22:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9250:22:8"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "9019:4:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9028:6:8",
                "type": ""
              }
            ],
            "src": "8995:283:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9350:265:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9455:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9457:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9457:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9457:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9427:6:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9435:18:8",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9424:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9424:30:8"
                  },
                  "nodeType": "YulIf",
                  "src": "9421:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9507:41:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9523:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9531:4:8",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9519:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9519:17:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9542:4:8",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9538:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9538:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9515:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9515:33:8"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9507:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9585:23:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "9597:4:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9603:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9593:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9593:15:8"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9585:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9334:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "9345:4:8",
                "type": ""
              }
            ],
            "src": "9284:331:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9717:73:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9734:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9739:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9727:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9727:19:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9727:19:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9755:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9774:3:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9779:4:8",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9770:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9770:14:8"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9755:11:8"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9689:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9694:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9705:11:8",
                "type": ""
              }
            ],
            "src": "9621:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9841:146:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9851:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9874:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9856:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9856:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9851:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9885:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9908:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9890:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9890:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9885:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9932:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9934:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9934:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9934:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9926:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9929:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9923:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9923:8:8"
                  },
                  "nodeType": "YulIf",
                  "src": "9920:2:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9964:17:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9976:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9979:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9972:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9972:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9964:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9827:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9830:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9836:4:8",
                "type": ""
              }
            ],
            "src": "9796:191:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10038:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10048:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10077:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10059:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10059:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10048:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10020:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10030:7:8",
                "type": ""
              }
            ],
            "src": "9993:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10157:83:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10167:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10178:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10167:7:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10228:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_DisputeStatus_$279",
                      "nodeType": "YulIdentifier",
                      "src": "10184:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10184:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10184:50:8"
                }
              ]
            },
            "name": "cleanup_t_enum$_DisputeStatus_$279",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10139:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10149:7:8",
                "type": ""
              }
            ],
            "src": "10095:145:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10291:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10301:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10316:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10323:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10312:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10312:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10301:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10273:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10283:7:8",
                "type": ""
              }
            ],
            "src": "10246:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10423:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10433:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10444:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10433:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10405:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10415:7:8",
                "type": ""
              }
            ],
            "src": "10378:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10540:85:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10550:69:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10613:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IArbitrable_$270_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10563:49:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10563:56:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10550:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrable_$270_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10520:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10530:9:8",
                "type": ""
              }
            ],
            "src": "10461:164:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10710:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10720:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10751:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10733:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10720:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrable_$270_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10690:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10700:9:8",
                "type": ""
              }
            ],
            "src": "10631:132:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10844:70:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10854:54:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10902:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_DisputeStatus_$279",
                      "nodeType": "YulIdentifier",
                      "src": "10867:34:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10867:41:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10854:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_DisputeStatus_$279_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10824:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10834:9:8",
                "type": ""
              }
            ],
            "src": "10769:145:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10971:103:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10994:3:8"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "10999:3:8"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11004:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "10981:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10981:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10981:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "11052:3:8"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11057:6:8"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11048:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11048:16:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11066:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11041:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11041:27:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11041:27:8"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10953:3:8",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10958:3:8",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10963:6:8",
                "type": ""
              }
            ],
            "src": "10920:154:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11108:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11125:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11128:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11118:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11118:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11118:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11222:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11225:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11215:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11215:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11215:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11246:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11249:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11239:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11239:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11239:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11080:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11294:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11311:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11314:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11304:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11304:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11304:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11408:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11411:4:8",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11401:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11401:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11401:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11432:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11435:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11425:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11425:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11425:15:8"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "11266:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11480:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11497:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11500:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11490:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11490:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11490:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11594:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11597:4:8",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11587:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11587:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11587:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11618:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11621:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11611:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11611:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11611:15:8"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11452:180:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11698:62:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11732:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "11734:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11734:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11734:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11721:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11728:1:8",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11718:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11718:12:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11711:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11711:20:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11708:2:8"
                }
              ]
            },
            "name": "validator_assert_t_enum$_DisputeStatus_$279",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11691:5:8",
                "type": ""
              }
            ],
            "src": "11638:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11809:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11866:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11875:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11878:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11868:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11868:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11868:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11832:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11857:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11839:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11839:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11829:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11829:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11822:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11822:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "11819:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11802:5:8",
                "type": ""
              }
            ],
            "src": "11766:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IArbitrable_$270_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IArbitrable_$270_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_DisputeStatus_$279_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n\n        mstore(add(pos, 0), \"Not enough ETH to cover arbitrat\")\n\n        mstore(add(pos, 32), \"ion costs\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"Dispute is not waiting arbitrati\")\n\n        mstore(add(pos, 32), \"on\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Not enough ETH to cover appeal c\")\n\n        mstore(add(pos, 32), \"osts\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"Ruling out of bounds\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n\n        mstore(add(pos, 0), \"Only the owner of this contract \")\n\n        mstore(add(pos, 32), \"can execute ruling\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IArbitrable_$270_t_uint256_t_uint256_t_enum$_DisputeStatus_$279__to_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IArbitrable_$270_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_enum$_DisputeStatus_$279__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_DisputeStatus_$279_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_DisputeStatus_$279(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_DisputeStatus_$279(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IArbitrable_$270_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IArbitrable_$270_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IArbitrable_$270_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_DisputeStatus_$279_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_DisputeStatus_$279(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_DisputeStatus_$279(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "168:2821:6:-:0;;;247:10;224:33;;;;;;;;;;;;;;;;;;;;168:2821;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "168:2821:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1464:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1767:904;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2675:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;381:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;224:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2873:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;731:583;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:196;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:142;1391:20;1428:8;1437:10;1428:20;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1419:36;;1318:142;;;:::o;1464:136::-;1537:14;1568:8;1577:10;1568:20;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1559:36;;1464:136;;;:::o;1767:904::-;1908:5;;;;;;;;;;1894:19;;:10;:19;;;1886:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:23;2001:8;2010:10;2001:20;;;;;;;;;;;;;;;;;;;;;;;;;;1975:46;;2094:7;:15;;;2083:7;:26;;2075:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2222:21;2204:39;;;;;;;;;;;;;;;;:7;:14;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;2196:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2353:7;2336;:14;;:24;;;;2383:20;2366:7;:14;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:5;;;;;;;;;;2517:23;;:44;2541:19;;;;;;;;;;;;;:15;:19::i;:::-;2517:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2622:7;:18;;;;;;;;;;;;:23;;;2646:10;2658:7;2622:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:904;;;:::o;2675:194::-;2789:34;2800:10;2812;;2789;:34::i;:::-;2776:9;:47;;2768:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2675:194;;;:::o;381:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;224:33::-;;;;;;;;;;;;:::o;2873:114::-;2945:7;2954;2977:1;2980;2969:13;;;;2873:114;;;:::o;731:583::-;832:17;936:27;952:10;;936:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:27::i;:::-;923:9;:40;;915:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1044:8;1058:149;;;;;;;;1098:10;1058:149;;;;;;1126:8;1058:149;;;;1158:4;1058:149;;;;1179:21;1058:149;;;;;;;;;;;;;;;;;;;1044:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:1;1227:8;:15;;;;:19;;;;:::i;:::-;1215:31;;1297:10;1258:51;;1274:9;1258:51;;;;;;;;;;731:583;;;;;:::o;531:196::-;628:7;650:6;643:13;;531:196;;;;;:::o;411:116::-;491:7;513:9;506:16;;411:116;;;:::o;7:342:8:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;368:351::-;;;485:3;478:4;470:6;466:17;462:27;452:2;;503:1;500;493:12;452:2;539:6;526:20;516:30;;569:18;561:6;558:30;555:2;;;601:1;598;591:12;555:2;638:4;630:6;626:17;614:29;;692:3;684:4;676:6;672:17;662:8;658:32;655:41;652:2;;;709:1;706;699:12;652:2;442:277;;;;;:::o;738:271::-;;842:3;835:4;827:6;823:17;819:27;809:2;;860:1;857;850:12;809:2;900:6;887:20;925:78;999:3;991:6;984:4;976:6;972:17;925:78;:::i;:::-;916:87;;799:210;;;;;:::o;1015:139::-;;1099:6;1086:20;1077:29;;1115:33;1142:5;1115:33;:::i;:::-;1067:87;;;;:::o;1160:373::-;;1277:2;1265:9;1256:7;1252:23;1248:32;1245:2;;;1293:1;1290;1283:12;1245:2;1364:1;1353:9;1349:17;1336:31;1394:18;1386:6;1383:30;1380:2;;;1426:1;1423;1416:12;1380:2;1454:62;1508:7;1499:6;1488:9;1484:22;1454:62;:::i;:::-;1444:72;;1307:219;1235:298;;;;:::o;1539:262::-;;1647:2;1635:9;1626:7;1622:23;1618:32;1615:2;;;1663:1;1660;1653:12;1615:2;1706:1;1731:53;1776:7;1767:6;1756:9;1752:22;1731:53;:::i;:::-;1721:63;;1677:117;1605:196;;;;:::o;1807:538::-;;;;1951:2;1939:9;1930:7;1926:23;1922:32;1919:2;;;1967:1;1964;1957:12;1919:2;2010:1;2035:53;2080:7;2071:6;2060:9;2056:22;2035:53;:::i;:::-;2025:63;;1981:117;2165:2;2154:9;2150:18;2137:32;2196:18;2188:6;2185:30;2182:2;;;2228:1;2225;2218:12;2182:2;2264:64;2320:7;2311:6;2300:9;2296:22;2264:64;:::i;:::-;2246:82;;;;2108:230;1909:436;;;;;:::o;2351:407::-;;;2476:2;2464:9;2455:7;2451:23;2447:32;2444:2;;;2492:1;2489;2482:12;2444:2;2535:1;2560:53;2605:7;2596:6;2585:9;2581:22;2560:53;:::i;:::-;2550:63;;2506:117;2662:2;2688:53;2733:7;2724:6;2713:9;2709:22;2688:53;:::i;:::-;2678:63;;2633:118;2434:324;;;;;:::o;2764:118::-;2851:24;2869:5;2851:24;:::i;:::-;2846:3;2839:37;2829:53;;:::o;2888:169::-;2994:56;3044:5;2994:56;:::i;:::-;2989:3;2982:69;2972:85;;:::o;3063:161::-;3165:52;3211:5;3165:52;:::i;:::-;3160:3;3153:65;3143:81;;:::o;3230:373::-;;3393:67;3457:2;3452:3;3393:67;:::i;:::-;3386:74;;3490:34;3486:1;3481:3;3477:11;3470:55;3556:11;3551:2;3546:3;3542:12;3535:33;3594:2;3589:3;3585:12;3578:19;;3376:227;;;:::o;3609:366::-;;3772:67;3836:2;3831:3;3772:67;:::i;:::-;3765:74;;3869:34;3865:1;3860:3;3856:11;3849:55;3935:4;3930:2;3925:3;3921:12;3914:26;3966:2;3961:3;3957:12;3950:19;;3755:220;;;:::o;3981:368::-;;4144:67;4208:2;4203:3;4144:67;:::i;:::-;4137:74;;4241:34;4237:1;4232:3;4228:11;4221:55;4307:6;4302:2;4297:3;4293:12;4286:28;4340:2;4335:3;4331:12;4324:19;;4127:222;;;:::o;4355:318::-;;4518:67;4582:2;4577:3;4518:67;:::i;:::-;4511:74;;4615:22;4611:1;4606:3;4602:11;4595:43;4664:2;4659:3;4655:12;4648:19;;4501:172;;;:::o;4679:382::-;;4842:67;4906:2;4901:3;4842:67;:::i;:::-;4835:74;;4939:34;4935:1;4930:3;4926:11;4919:55;5005:20;5000:2;4995:3;4991:12;4984:42;5052:2;5047:3;5043:12;5036:19;;4825:236;;;:::o;5067:118::-;5154:24;5172:5;5154:24;:::i;:::-;5149:3;5142:37;5132:53;;:::o;5191:222::-;;5322:2;5311:9;5307:18;5299:26;;5335:71;5403:1;5392:9;5388:17;5379:6;5335:71;:::i;:::-;5289:124;;;;:::o;5419:621::-;;5668:3;5657:9;5653:19;5645:27;;5682:90;5769:1;5758:9;5754:17;5745:6;5682:90;:::i;:::-;5782:72;5850:2;5839:9;5835:18;5826:6;5782:72;:::i;:::-;5864;5932:2;5921:9;5917:18;5908:6;5864:72;:::i;:::-;5946:87;6029:2;6018:9;6014:18;6005:6;5946:87;:::i;:::-;5635:405;;;;;;;:::o;6046:252::-;;6192:2;6181:9;6177:18;6169:26;;6205:86;6288:1;6277:9;6273:17;6264:6;6205:86;:::i;:::-;6159:139;;;;:::o;6304:419::-;;6508:2;6497:9;6493:18;6485:26;;6557:9;6551:4;6547:20;6543:1;6532:9;6528:17;6521:47;6585:131;6711:4;6585:131;:::i;:::-;6577:139;;6475:248;;;:::o;6729:419::-;;6933:2;6922:9;6918:18;6910:26;;6982:9;6976:4;6972:20;6968:1;6957:9;6953:17;6946:47;7010:131;7136:4;7010:131;:::i;:::-;7002:139;;6900:248;;;:::o;7154:419::-;;7358:2;7347:9;7343:18;7335:26;;7407:9;7401:4;7397:20;7393:1;7382:9;7378:17;7371:47;7435:131;7561:4;7435:131;:::i;:::-;7427:139;;7325:248;;;:::o;7579:419::-;;7783:2;7772:9;7768:18;7760:26;;7832:9;7826:4;7822:20;7818:1;7807:9;7803:17;7796:47;7860:131;7986:4;7860:131;:::i;:::-;7852:139;;7750:248;;;:::o;8004:419::-;;8208:2;8197:9;8193:18;8185:26;;8257:9;8251:4;8247:20;8243:1;8232:9;8228:17;8221:47;8285:131;8411:4;8285:131;:::i;:::-;8277:139;;8175:248;;;:::o;8429:222::-;;8560:2;8549:9;8545:18;8537:26;;8573:71;8641:1;8630:9;8626:17;8617:6;8573:71;:::i;:::-;8527:124;;;;:::o;8657:332::-;;8816:2;8805:9;8801:18;8793:26;;8829:71;8897:1;8886:9;8882:17;8873:6;8829:71;:::i;:::-;8910:72;8978:2;8967:9;8963:18;8954:6;8910:72;:::i;:::-;8783:206;;;;;:::o;8995:283::-;;9061:2;9055:9;9045:19;;9103:4;9095:6;9091:17;9210:6;9198:10;9195:22;9174:18;9162:10;9159:34;9156:62;9153:2;;;9221:18;;:::i;:::-;9153:2;9261:10;9257:2;9250:22;9035:243;;;;:::o;9284:331::-;;9435:18;9427:6;9424:30;9421:2;;;9457:18;;:::i;:::-;9421:2;9542:4;9538:9;9531:4;9523:6;9519:17;9515:33;9507:41;;9603:4;9597;9593:15;9585:23;;9350:265;;;:::o;9621:169::-;;9739:6;9734:3;9727:19;9779:4;9774:3;9770:14;9755:29;;9717:73;;;;:::o;9796:191::-;;9856:20;9874:1;9856:20;:::i;:::-;9851:25;;9890:20;9908:1;9890:20;:::i;:::-;9885:25;;9929:1;9926;9923:8;9920:2;;;9934:18;;:::i;:::-;9920:2;9979:1;9976;9972:9;9964:17;;9841:146;;;;:::o;9993:96::-;;10059:24;10077:5;10059:24;:::i;:::-;10048:35;;10038:51;;;:::o;10095:145::-;;10178:5;10167:16;;10184:50;10228:5;10184:50;:::i;:::-;10157:83;;;:::o;10246:126::-;;10323:42;10316:5;10312:54;10301:65;;10291:81;;;:::o;10378:77::-;;10444:5;10433:16;;10423:32;;;:::o;10461:164::-;;10563:56;10613:5;10563:56;:::i;:::-;10550:69;;10540:85;;;:::o;10631:132::-;;10733:24;10751:5;10733:24;:::i;:::-;10720:37;;10710:53;;;:::o;10769:145::-;;10867:41;10902:5;10867:41;:::i;:::-;10854:54;;10844:70;;;:::o;10920:154::-;11004:6;10999:3;10994;10981:30;11066:1;11057:6;11052:3;11048:16;11041:27;10971:103;;;:::o;11080:180::-;11128:77;11125:1;11118:88;11225:4;11222:1;11215:15;11249:4;11246:1;11239:15;11266:180;11314:77;11311:1;11304:88;11411:4;11408:1;11401:15;11435:4;11432:1;11425:15;11452:180;11500:77;11497:1;11490:88;11597:4;11594:1;11587:15;11621:4;11618:1;11611:15;11638:122;11728:1;11721:5;11718:12;11708:2;;11734:18;;:::i;:::-;11708:2;11698:62;:::o;11766:122::-;11839:24;11857:5;11839:24;:::i;:::-;11832:5;11829:35;11819:2;;11878:1;11875;11868:12;11819:2;11809:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./IArbitrator.sol\";\n\n/**\n * simple arbitrator example. Does NOT implement appeal functionality\n */\ncontract SimpleCentralizedArbitrator is IArbitrator {\n  address public owner = msg.sender;\n\n  struct Dispute {\n    IArbitrable arbitrated;\n    uint256 choices;\n    uint256 ruling;\n    DisputeStatus status;\n  }\n\n  Dispute[] public disputes;\n\n  function arbitrationCost(bytes memory _extraData) public override pure returns (uint256) {\n    return 0.1 ether;\n  }\n\n  function appealCost(uint256 _disputeID, bytes calldata _extraData) public override pure returns (uint256) {\n    return 2**250; // unaffordable amount to basically avoid appeals in this example\n  }\n\n  function createDispute(uint256 _choices, bytes calldata _extraData) public override payable returns (uint256 disputeID) {\n    // require payment to be at least the arbitrationCost\n    require(msg.value >= arbitrationCost(_extraData), \"Not enough ETH to cover arbitration costs\");\n\n    // create a new dispute\n    disputes.push(Dispute({\n      arbitrated: IArbitrable(msg.sender),\n      choices: _choices,\n      ruling: uint256(1000),\n      status: DisputeStatus.Waiting\n    }));\n\n    disputeID = disputes.length - 1;\n\n    emit DisputeCreation(disputeID, IArbitrable(msg.sender));\n  }\n\n  function disputeStatus(uint256 _disputeID) public override view returns (DisputeStatus status) {\n    status = disputes[_disputeID].status;\n  }\n\n  function currentRuling(uint256 _disputeID) public override view returns (uint256 ruling) {\n    ruling = disputes[_disputeID].ruling;\n  }\n\n  // proxy function which calls arbitrable.rule(), but performs some checks beforehand, then updates dispute, then calls\n  // rule of arbitrable to enforce ruling\n  function rule(uint256 _disputeID, uint256 _ruling) public {\n    // make sure only the arbitrator can decide ruling\n    require(msg.sender == owner, \"Only the owner of this contract can execute ruling\");\n\n    Dispute storage dispute = disputes[_disputeID];\n    \n    // require ruling to be a valid choice\n    require(_ruling <= dispute.choices, \"Ruling out of bounds\");\n    // rulings cannot be made on already solved dispute\n    require(dispute.status == DisputeStatus.Waiting, \"Dispute is not waiting arbitration\");\n\n    // update ruling and status of the dispute\n    dispute.ruling = _ruling;\n    dispute.status = DisputeStatus.Solved;\n\n    // pay arbitration fee to the arbitrator\n    // fee is deposited by payee when calling createDispute()\n    payable(owner).transfer(arbitrationCost(\"\"));\n    // call arbitrable rule function to enforce ruling\n    dispute.arbitrated.rule(_disputeID, _ruling);\n  }\n\n  function appeal(uint256 _disputeID, bytes calldata _extraData) public override payable {\n    require(msg.value >= appealCost(_disputeID, _extraData), \"Not enough ETH to cover appeal costs\");\n  }\n\n  function appealPeriod(uint256 _disputeID) public override pure returns (uint256, uint256) {\n    return (0, 0);\n  }\n}",
  "sourcePath": "/home/victor/kairos/backend/contracts/SimpleCentralizedArbitrator.sol",
  "ast": {
    "absolutePath": "/home/victor/kairos/backend/contracts/SimpleCentralizedArbitrator.sol",
    "exportedSymbols": {
      "IArbitrable": [
        270
      ],
      "IArbitrator": [
        367
      ],
      "SimpleCentralizedArbitrator": [
        682
      ]
    },
    "id": 683,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 438,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:6"
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/IArbitrator.sol",
        "file": "./IArbitrator.sol",
        "id": 439,
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 368,
        "src": "61:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 441,
              "name": "IArbitrator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 367,
              "src": "208:11:6"
            },
            "id": 442,
            "nodeType": "InheritanceSpecifier",
            "src": "208:11:6"
          }
        ],
        "contractDependencies": [
          367
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 440,
          "nodeType": "StructuredDocumentation",
          "src": "90:77:6",
          "text": " simple arbitrator example. Does NOT implement appeal functionality"
        },
        "fullyImplemented": true,
        "id": 682,
        "linearizedBaseContracts": [
          682,
          367
        ],
        "name": "SimpleCentralizedArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 446,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "224:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 443,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 444,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "247:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 445,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "247:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleCentralizedArbitrator.Dispute",
            "id": 457,
            "members": [
              {
                "constant": false,
                "id": 449,
                "mutability": "mutable",
                "name": "arbitrated",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "283:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrable_$270",
                  "typeString": "contract IArbitrable"
                },
                "typeName": {
                  "id": 448,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 447,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 270,
                    "src": "283:11:6"
                  },
                  "referencedDeclaration": 270,
                  "src": "283:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$270",
                    "typeString": "contract IArbitrable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 451,
                "mutability": "mutable",
                "name": "choices",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "311:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 450,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 453,
                "mutability": "mutable",
                "name": "ruling",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "332:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 452,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "332:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 456,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "352:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$279",
                  "typeString": "enum IArbitrator.DisputeStatus"
                },
                "typeName": {
                  "id": 455,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 454,
                    "name": "DisputeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 279,
                    "src": "352:13:6"
                  },
                  "referencedDeclaration": 279,
                  "src": "352:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$279",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nodeType": "StructDefinition",
            "scope": 682,
            "src": "262:115:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "564a565d",
            "id": 461,
            "mutability": "mutable",
            "name": "disputes",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "381:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
              "typeString": "struct SimpleCentralizedArbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "id": 459,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 458,
                  "name": "Dispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 457,
                  "src": "381:7:6"
                },
                "referencedDeclaration": 457,
                "src": "381:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                  "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                }
              },
              "id": 460,
              "nodeType": "ArrayTypeName",
              "src": "381:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage_ptr",
                "typeString": "struct SimpleCentralizedArbitrator.Dispute[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              321
            ],
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "500:27:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "302e31",
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "513:9:6",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "functionReturnParameters": 468,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "506:16:6"
                }
              ]
            },
            "functionSelector": "f7434ea9",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "468:8:6"
            },
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "436:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:25:6"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "491:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:9:6"
            },
            "scope": 682,
            "src": "411:116:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              339
            ],
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "637:90:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "323530",
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "653:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250_by_1",
                        "typeString": "int_const 250"
                      },
                      "value": "250"
                    },
                    "src": "650:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 485,
                  "nodeType": "Return",
                  "src": "643:13:6"
                }
              ]
            },
            "functionSelector": "f23f16e6",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 478,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:6"
            },
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "551:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "571:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "550:47:6"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "628:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:9:6"
            },
            "scope": 682,
            "src": "531:196:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              313
            ],
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "851:463:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 498,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "923:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "923:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "952:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 500,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "936:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "923:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f737473",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "965:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs\""
                        },
                        "value": "Not enough ETH to cover arbitration costs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "915:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "915:94:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 512,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1098:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1098:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 511,
                              "name": "IArbitrable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1086:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IArbitrable_$270_$",
                                "typeString": "type(contract IArbitrable)"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1086:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$270",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          {
                            "id": 515,
                            "name": "_choices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1126:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1158:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                }
                              ],
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1150:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 516,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1150:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1150:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 520,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "1179:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Waiting",
                            "nodeType": "MemberAccess",
                            "src": "1179:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$279",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrable_$270",
                              "typeString": "contract IArbitrable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_DisputeStatus_$279",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          ],
                          "id": 510,
                          "name": "Dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1058:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dispute_$457_storage_ptr_$",
                            "typeString": "type(struct SimpleCentralizedArbitrator.Dispute storage pointer)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "arbitrated",
                          "choices",
                          "ruling",
                          "status"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1058:149:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_memory_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dispute_$457_memory_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute memory"
                        }
                      ],
                      "expression": {
                        "id": 507,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1044:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1044:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dispute_$457_storage_$returns$__$",
                        "typeString": "function (struct SimpleCentralizedArbitrator.Dispute storage ref)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:164:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:164:6"
                },
                {
                  "expression": {
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "1215:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 526,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1227:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1227:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1245:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1227:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1215:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:31:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1274:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 535,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1297:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1297:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 534,
                          "name": "IArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "1285:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrable_$270_$",
                            "typeString": "type(contract IArbitrable)"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      ],
                      "id": 532,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "1258:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$270_$returns$__$",
                        "typeString": "function (uint256,contract IArbitrable)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "EmitStatement",
                  "src": "1253:56:6"
                }
              ]
            },
            "functionSelector": "c13517e1",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 493,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "806:8:6"
            },
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "754:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "772:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:45:6"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "832:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:19:6"
            },
            "scope": 682,
            "src": "731:583:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              358
            ],
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1413:47:6",
              "statements": [
                {
                  "expression": {
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 550,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1419:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 551,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1428:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "id": 552,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "1437:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1428:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 456,
                      "src": "1428:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "1419:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:36:6"
                }
              ]
            },
            "functionSelector": "10f169e8",
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 545,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1368:8:6"
            },
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1341:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:20:6"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1391:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$279",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "id": 547,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 546,
                      "name": "DisputeStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 279,
                      "src": "1391:13:6"
                    },
                    "referencedDeclaration": 279,
                    "src": "1391:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:22:6"
            },
            "scope": 682,
            "src": "1318:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              366
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "1553:47:6",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1559:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 567,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1568:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 569,
                        "indexExpression": {
                          "id": 568,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "1577:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1568:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "1568:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1559:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:36:6"
                }
              ]
            },
            "functionSelector": "1c3db16d",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1514:8:6"
            },
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "1487:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:20:6"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "1537:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:16:6"
            },
            "scope": 682,
            "src": "1464:136:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "1825:846:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 582,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1894:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1894:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 584,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "1908:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1894:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e6572206f66207468697320636f6e74726163742063616e20657865637574652072756c696e67",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1915:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc",
                          "typeString": "literal_string \"Only the owner of this contract can execute ruling\""
                        },
                        "value": "Only the owner of this contract can execute ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc",
                          "typeString": "literal_string \"Only the owner of this contract can execute ruling\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1886:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:82:6"
                },
                {
                  "assignments": [
                    591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "1975:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                        "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                      },
                      "typeName": {
                        "id": 590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 589,
                          "name": "Dispute",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 457,
                          "src": "1975:7:6"
                        },
                        "referencedDeclaration": 457,
                        "src": "1975:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 595,
                  "initialValue": {
                    "baseExpression": {
                      "id": 592,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "2001:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                        "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 594,
                    "indexExpression": {
                      "id": 593,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "2010:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2001:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$457_storage",
                      "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1975:46:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 597,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "2083:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 598,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "2094:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                              "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 451,
                          "src": "2094:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2083:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e6473",
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        },
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2075:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$279",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 605,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "2204:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                              "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 456,
                          "src": "2204:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$279",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 607,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2222:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                              "typeString": "type(enum IArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "src": "2222:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$279",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "src": "2204:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206973206e6f742077616974696e67206172626974726174696f6e",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740",
                          "typeString": "literal_string \"Dispute is not waiting arbitration\""
                        },
                        "value": "Dispute is not waiting arbitration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740",
                          "typeString": "literal_string \"Dispute is not waiting arbitration\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2196:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:86:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:86:6"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 613,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2336:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "2336:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 616,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "2353:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2336:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:24:6"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 619,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2366:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 456,
                      "src": "2366:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 622,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2383:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                          "typeString": "type(enum IArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "src": "2383:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "2366:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2557:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 631,
                          "name": "arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "2541:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2541:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 628,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "2525:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2517:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 641,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "2646:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 642,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "2658:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 636,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "2622:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 449,
                        "src": "2622:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "2622:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:44:6"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1781:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1801:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:37:6"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:6"
            },
            "scope": 682,
            "src": "1767:904:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              329
            ],
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "2762:107:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 655,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2776:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2776:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 658,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "2800:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 659,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "2812:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 657,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "2789:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes calldata) pure returns (uint256)"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2789:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2776:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f737473",
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2825:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs\""
                        },
                        "value": "Not enough ETH to cover appeal costs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2768:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:96:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:96:6"
                }
              ]
            },
            "functionSelector": "49912f88",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 652,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:6"
            },
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "2691:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "2711:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:47:6"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:0:6"
            },
            "scope": 682,
            "src": "2675:194:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              349
            ],
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "2963:24:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2977:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2980:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 678,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2976:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "2969:13:6"
                }
              ]
            },
            "functionSelector": "afe15cfb",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 670,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2922:8:6"
            },
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2895:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2894:20:6"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2945:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2954:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2944:18:6"
            },
            "scope": 682,
            "src": "2873:114:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 683,
        "src": "168:2821:6"
      }
    ],
    "src": "36:2953:6"
  },
  "legacyAST": {
    "absolutePath": "/home/victor/kairos/backend/contracts/SimpleCentralizedArbitrator.sol",
    "exportedSymbols": {
      "IArbitrable": [
        270
      ],
      "IArbitrator": [
        367
      ],
      "SimpleCentralizedArbitrator": [
        682
      ]
    },
    "id": 683,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 438,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:6"
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/IArbitrator.sol",
        "file": "./IArbitrator.sol",
        "id": 439,
        "nodeType": "ImportDirective",
        "scope": 683,
        "sourceUnit": 368,
        "src": "61:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 441,
              "name": "IArbitrator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 367,
              "src": "208:11:6"
            },
            "id": 442,
            "nodeType": "InheritanceSpecifier",
            "src": "208:11:6"
          }
        ],
        "contractDependencies": [
          367
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 440,
          "nodeType": "StructuredDocumentation",
          "src": "90:77:6",
          "text": " simple arbitrator example. Does NOT implement appeal functionality"
        },
        "fullyImplemented": true,
        "id": 682,
        "linearizedBaseContracts": [
          682,
          367
        ],
        "name": "SimpleCentralizedArbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 446,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "224:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 443,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 444,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "247:3:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 445,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "247:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleCentralizedArbitrator.Dispute",
            "id": 457,
            "members": [
              {
                "constant": false,
                "id": 449,
                "mutability": "mutable",
                "name": "arbitrated",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "283:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrable_$270",
                  "typeString": "contract IArbitrable"
                },
                "typeName": {
                  "id": 448,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 447,
                    "name": "IArbitrable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 270,
                    "src": "283:11:6"
                  },
                  "referencedDeclaration": 270,
                  "src": "283:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$270",
                    "typeString": "contract IArbitrable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 451,
                "mutability": "mutable",
                "name": "choices",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "311:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 450,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 453,
                "mutability": "mutable",
                "name": "ruling",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "332:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 452,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "332:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 456,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 457,
                "src": "352:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DisputeStatus_$279",
                  "typeString": "enum IArbitrator.DisputeStatus"
                },
                "typeName": {
                  "id": 455,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 454,
                    "name": "DisputeStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 279,
                    "src": "352:13:6"
                  },
                  "referencedDeclaration": 279,
                  "src": "352:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$279",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Dispute",
            "nodeType": "StructDefinition",
            "scope": 682,
            "src": "262:115:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "564a565d",
            "id": 461,
            "mutability": "mutable",
            "name": "disputes",
            "nodeType": "VariableDeclaration",
            "scope": 682,
            "src": "381:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
              "typeString": "struct SimpleCentralizedArbitrator.Dispute[]"
            },
            "typeName": {
              "baseType": {
                "id": 459,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 458,
                  "name": "Dispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 457,
                  "src": "381:7:6"
                },
                "referencedDeclaration": 457,
                "src": "381:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                  "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                }
              },
              "id": 460,
              "nodeType": "ArrayTypeName",
              "src": "381:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage_ptr",
                "typeString": "struct SimpleCentralizedArbitrator.Dispute[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              321
            ],
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "500:27:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "302e31",
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "513:9:6",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "functionReturnParameters": 468,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "506:16:6"
                }
              ]
            },
            "functionSelector": "f7434ea9",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "468:8:6"
            },
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "436:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:25:6"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "491:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:9:6"
            },
            "scope": 682,
            "src": "411:116:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              339
            ],
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "637:90:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "650:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "323530",
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "653:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_250_by_1",
                        "typeString": "int_const 250"
                      },
                      "value": "250"
                    },
                    "src": "650:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1809251394333065553493296640760748560207343510400633813116524750123642650624_by_1",
                      "typeString": "int_const 1809...(68 digits omitted)...0624"
                    }
                  },
                  "functionReturnParameters": 481,
                  "id": 485,
                  "nodeType": "Return",
                  "src": "643:13:6"
                }
              ]
            },
            "functionSelector": "f23f16e6",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 478,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "605:8:6"
            },
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "551:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "571:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "550:47:6"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "628:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:9:6"
            },
            "scope": 682,
            "src": "531:196:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              313
            ],
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "851:463:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 498,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "923:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "923:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "952:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 500,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "936:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "923:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f737473",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "965:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs\""
                        },
                        "value": "Not enough ETH to cover arbitration costs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17bc03e4a70440ac70a0919dc29ea2a1078f6e5888b17bdaf362a4cbb6c364f9",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "915:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "915:94:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 512,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1098:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1098:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 511,
                              "name": "IArbitrable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1086:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IArbitrable_$270_$",
                                "typeString": "type(contract IArbitrable)"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1086:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrable_$270",
                              "typeString": "contract IArbitrable"
                            }
                          },
                          {
                            "id": 515,
                            "name": "_choices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1126:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1158:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                }
                              ],
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1150:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 516,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1150:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1150:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 520,
                              "name": "DisputeStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "1179:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                                "typeString": "type(enum IArbitrator.DisputeStatus)"
                              }
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Waiting",
                            "nodeType": "MemberAccess",
                            "src": "1179:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_DisputeStatus_$279",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IArbitrable_$270",
                              "typeString": "contract IArbitrable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_enum$_DisputeStatus_$279",
                              "typeString": "enum IArbitrator.DisputeStatus"
                            }
                          ],
                          "id": 510,
                          "name": "Dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "1058:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dispute_$457_storage_ptr_$",
                            "typeString": "type(struct SimpleCentralizedArbitrator.Dispute storage pointer)"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "arbitrated",
                          "choices",
                          "ruling",
                          "status"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1058:149:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_memory_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dispute_$457_memory_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute memory"
                        }
                      ],
                      "expression": {
                        "id": 507,
                        "name": "disputes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1044:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                        }
                      },
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1044:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dispute_$457_storage_$returns$__$",
                        "typeString": "function (struct SimpleCentralizedArbitrator.Dispute storage ref)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:164:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:164:6"
                },
                {
                  "expression": {
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "1215:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 526,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1227:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1227:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1245:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1227:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1215:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:31:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1274:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 535,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1297:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1297:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 534,
                          "name": "IArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 270,
                          "src": "1285:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrable_$270_$",
                            "typeString": "type(contract IArbitrable)"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      ],
                      "id": 532,
                      "name": "DisputeCreation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 287,
                      "src": "1258:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$270_$returns$__$",
                        "typeString": "function (uint256,contract IArbitrable)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "EmitStatement",
                  "src": "1253:56:6"
                }
              ]
            },
            "functionSelector": "c13517e1",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 493,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "806:8:6"
            },
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "754:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "772:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:45:6"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 541,
                  "src": "832:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:19:6"
            },
            "scope": 682,
            "src": "731:583:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              358
            ],
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1413:47:6",
              "statements": [
                {
                  "expression": {
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 550,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1419:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 551,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1428:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "id": 552,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "1437:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1428:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 456,
                      "src": "1428:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "1419:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:36:6"
                }
              ]
            },
            "functionSelector": "10f169e8",
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 545,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1368:8:6"
            },
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1341:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:20:6"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1391:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$279",
                    "typeString": "enum IArbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "id": 547,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 546,
                      "name": "DisputeStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 279,
                      "src": "1391:13:6"
                    },
                    "referencedDeclaration": 279,
                    "src": "1391:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:22:6"
            },
            "scope": 682,
            "src": "1318:142:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              366
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "1553:47:6",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1559:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 567,
                          "name": "disputes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "1568:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                          }
                        },
                        "id": 569,
                        "indexExpression": {
                          "id": 568,
                          "name": "_disputeID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 560,
                          "src": "1577:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1568:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "1568:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1559:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:36:6"
                }
              ]
            },
            "functionSelector": "1c3db16d",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1514:8:6"
            },
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "1487:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:20:6"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "1537:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:16:6"
            },
            "scope": 682,
            "src": "1464:136:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "1825:846:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 582,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1894:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1894:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 584,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "1908:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1894:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e6572206f66207468697320636f6e74726163742063616e20657865637574652072756c696e67",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1915:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc",
                          "typeString": "literal_string \"Only the owner of this contract can execute ruling\""
                        },
                        "value": "Only the owner of this contract can execute ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b15e1a13ab9c6d4c8055724350fc13ec5a4ea9f1bf13324273514e5f507e9edc",
                          "typeString": "literal_string \"Only the owner of this contract can execute ruling\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1886:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:82:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:82:6"
                },
                {
                  "assignments": [
                    591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "dispute",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "1975:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                        "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                      },
                      "typeName": {
                        "id": 590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 589,
                          "name": "Dispute",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 457,
                          "src": "1975:7:6"
                        },
                        "referencedDeclaration": 457,
                        "src": "1975:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 595,
                  "initialValue": {
                    "baseExpression": {
                      "id": 592,
                      "name": "disputes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "2001:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dispute_$457_storage_$dyn_storage",
                        "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref[] storage ref"
                      }
                    },
                    "id": 594,
                    "indexExpression": {
                      "id": 593,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "2010:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2001:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dispute_$457_storage",
                      "typeString": "struct SimpleCentralizedArbitrator.Dispute storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1975:46:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 597,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "2083:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 598,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "2094:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                              "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "choices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 451,
                          "src": "2094:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2083:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e6473",
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        },
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2075:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DisputeStatus_$279",
                          "typeString": "enum IArbitrator.DisputeStatus"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 605,
                            "name": "dispute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "2204:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                              "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 456,
                          "src": "2204:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$279",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 607,
                            "name": "DisputeStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2222:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                              "typeString": "type(enum IArbitrator.DisputeStatus)"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Waiting",
                          "nodeType": "MemberAccess",
                          "src": "2222:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DisputeStatus_$279",
                            "typeString": "enum IArbitrator.DisputeStatus"
                          }
                        },
                        "src": "2204:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44697370757465206973206e6f742077616974696e67206172626974726174696f6e",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740",
                          "typeString": "literal_string \"Dispute is not waiting arbitration\""
                        },
                        "value": "Dispute is not waiting arbitration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43cc7e57e3fb50c81775e2f05db137c06da8b9caa890657fda456f71a1308740",
                          "typeString": "literal_string \"Dispute is not waiting arbitration\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2196:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:86:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:86:6"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 613,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2336:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ruling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 453,
                      "src": "2336:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 616,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "2353:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2336:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:24:6"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 619,
                        "name": "dispute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "2366:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                          "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 456,
                      "src": "2366:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 622,
                        "name": "DisputeStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2383:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DisputeStatus_$279_$",
                          "typeString": "type(enum IArbitrator.DisputeStatus)"
                        }
                      },
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Solved",
                      "nodeType": "MemberAccess",
                      "src": "2383:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DisputeStatus_$279",
                        "typeString": "enum IArbitrator.DisputeStatus"
                      }
                    },
                    "src": "2366:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$279",
                      "typeString": "enum IArbitrator.DisputeStatus"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:37:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2557:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 631,
                          "name": "arbitrationCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "2541:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2541:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 628,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "2525:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2517:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2517:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 641,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "2646:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 642,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "2658:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 636,
                          "name": "dispute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "2622:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dispute_$457_storage_ptr",
                            "typeString": "struct SimpleCentralizedArbitrator.Dispute storage pointer"
                          }
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 449,
                        "src": "2622:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$270",
                          "typeString": "contract IArbitrable"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rule",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "2622:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:44:6"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1781:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "1801:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:37:6"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:6"
            },
            "scope": 682,
            "src": "1767:904:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              329
            ],
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "2762:107:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 655,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2776:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2776:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 658,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "2800:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 659,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "2812:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 657,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "2789:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes calldata) pure returns (uint256)"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2789:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2776:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f737473",
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2825:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs\""
                        },
                        "value": "Not enough ETH to cover appeal costs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4cdc60bf0db641587c3949b4153563b77e46643824f79d8d3fe06576ac6dccb4",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs\""
                        }
                      ],
                      "id": 654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2768:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:96:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:96:6"
                }
              ]
            },
            "functionSelector": "49912f88",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 652,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:6"
            },
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "2691:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "2711:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:47:6"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:0:6"
            },
            "scope": 682,
            "src": "2675:194:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              349
            ],
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "2963:24:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2977:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2980:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 678,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2976:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "2969:13:6"
                }
              ]
            },
            "functionSelector": "afe15cfb",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 670,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2922:8:6"
            },
            "parameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2895:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2895:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2894:20:6"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2945:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "2954:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2944:18:6"
            },
            "scope": 682,
            "src": "2873:114:6",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 683,
        "src": "168:2821:6"
      }
    ],
    "src": "36:2953:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-28T16:16:00.604Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "appeal(uint256,bytes)": {
        "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give extra info on the appeal."
        }
      },
      "appealCost(uint256,bytes)": {
        "details": "Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_disputeID": "ID of the dispute to be appealed.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "_0": "Amount to be paid."
        }
      },
      "appealPeriod(uint256)": {
        "details": "Compute the start and end of the dispute's current or next appeal period, if possible. If not known or appeal is impossible: should return (0, 0).",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "_0": "The start of the period.",
          "_1": "The end of the period."
        }
      },
      "arbitrationCost(bytes)": {
        "details": "Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
        "params": {
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "_0": "Amount to be paid."
        }
      },
      "createDispute(uint256,bytes)": {
        "details": "Create a dispute. Must be called by the arbitrable contract. Must be paid at least arbitrationCost(_extraData).",
        "params": {
          "_choices": "Amount of choices the arbitrator can make in this dispute.",
          "_extraData": "Can be used to give additional info on the dispute to be created."
        },
        "returns": {
          "disputeID": "ID of the dispute created."
        }
      },
      "currentRuling(uint256)": {
        "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
        "params": {
          "_disputeID": "ID of the dispute."
        },
        "returns": {
          "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
        }
      },
      "disputeStatus(uint256)": {
        "details": "Return the status of a dispute.",
        "params": {
          "_disputeID": "ID of the dispute to rule."
        },
        "returns": {
          "status": "The status of the dispute."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "simple arbitrator example. Does NOT implement appeal functionality",
    "version": 1
  }
}