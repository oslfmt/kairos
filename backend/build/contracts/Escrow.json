{
  "contractName": "Escrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_evidenceGroupID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_metaEvidenceID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "MetaEvidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IArbitrator",
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contracts",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        },
        {
          "internalType": "contract IArbitrator",
          "name": "arbitrator",
          "type": "address"
        },
        {
          "internalType": "enum Escrow.Status",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reclaimedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "payerFeeDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "payeeFeeDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reclamationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "arbitrationFeeDepositPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_payee",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_metaEvidence",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_reclamationPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_arbitrationFeeDepositPeriod",
          "type": "uint256"
        }
      ],
      "name": "createNewContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "contractID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contractID",
          "type": "uint256"
        }
      ],
      "name": "releaseFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contractID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"}],\"name\":\"Dispute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_evidenceGroupID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_party\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"Evidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_metaEvidenceID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"MetaEvidence\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrator\",\"name\":\"_arbitrator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"contract IArbitrator\",\"name\":\"arbitrator\",\"type\":\"address\"},{\"internalType\":\"enum Escrow.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reclaimedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payerFeeDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payeeFeeDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reclamationPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"arbitrationFeeDepositPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_metaEvidence\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_reclamationPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_arbitrationFeeDepositPeriod\",\"type\":\"uint256\"}],\"name\":\"createNewContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractID\",\"type\":\"uint256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"rule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contractID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_evidence\",\"type\":\"string\"}],\"name\":\"submitEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"rule(uint256,uint256)\":{\"details\":\"Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\",\"params\":{\"_disputeID\":\"ID of the dispute in the Arbitrator contract.\",\"_ruling\":\"Ruling given by the arbitrator. Note that 0 is reserved for \\\"Not able/wanting to make a decision\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/victor/kairos/backend/contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/victor/kairos/backend/contracts/Escrow.sol\":{\"keccak256\":\"0xc32d1e711408d41f9e95872c904e20550e9db1f308499571c2c911b308464f66\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://58452bab001375baf4bdaafbf63c4dfb14ad6cf9b32c7eda6b0df566a0692299\",\"dweb:/ipfs/QmQpQN9N2bnhewgdEfFaEuzGcNamCfCmacCZYv3dsj6Atu\"]},\"/home/victor/kairos/backend/contracts/interfaces/IArbitrable.sol\":{\"keccak256\":\"0x1f239a63bd2b7bb743aff20da0cf4ad46408d77f34ef2b9a9002df5dbc827311\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b296dc7ce9da41ae2405d454aa360dc85d289697a85972925f3cc97a405326a\",\"dweb:/ipfs/QmRzmwGGNuwTq9WZucbr3wQipsko6Ymgey7iW7NwQcjx2L\"]},\"/home/victor/kairos/backend/contracts/interfaces/IArbitrator.sol\":{\"keccak256\":\"0x1809c674bdf3c6a31f205828d0e4730610a960cdbb8d3917906d56db73a300c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c43f34f40a8ff85e9b9d7e59ff35b17a9764f237516b9f14a7e9585a7f1045c\",\"dweb:/ipfs/QmdHhaNQrADyyRtN8noEydh7z5WUXgFww94u6Cj7dmo91Z\"]},\"/home/victor/kairos/backend/contracts/interfaces/IEvidence.sol\":{\"keccak256\":\"0x1d315a0cba381f46b4fc1dbcf3ee137fb6de280ffa0f231b861054dcaf38b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b58d814357456a26cda3141844ae7b5401e7c90a2215d11cc62bd8846995faf\",\"dweb:/ipfs/QmPRP74AXopx6tiQYCfK3MxKaeEVxMqujsXrt8y9vMxLv9\"]}},\"version\":1}",
  "bytecode": "0x60806040527360b2abfdfad9c0873242f59f2a8c32a3cc682f806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b506117e6806100746000396000f3fe60806040526004361061004a5760003560e01c8063311a6c561461004f578063474da79a146100785780634d68282f146100c05780634e97202e146100e9578063a6a7f0eb14610119575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610ffc565b610142565b005b34801561008457600080fd5b5061009f600480360381019061009a9190610f7f565b610590565b6040516100b79c9b9a9998979695949392919061132b565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e29190610f7f565b61066d565b005b61010360048036038101906100fe9190610f04565b6108f0565b60405161011091906114e7565b60405180910390f35b34801561012557600080fd5b50610140600480360381019061013b9190610fa8565b610be7565b005b600060026000848152602001908152602001600020549050600060018281548110610196577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600b020190508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610238576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022f90611467565b60405180910390fd5b60026003811115610272577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160020160149054906101000a900460ff1660038111156102bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906114c7565b60405180910390fd5b6002831115610340576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610337906114a7565b60405180910390fd5b60038160020160146101000a81548160ff0219169083600381111561038e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600160028111156103cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b831415610457578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600701548360030154610426919061157f565b9081150290604051600060405180830381858888f19350505050158015610451573d6000803e3d6000fd5b50610517565b600280811115610490577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b831415610516578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826008015483600301546104e9919061157f565b9081150290604051600060405180830381858888f19350505050158015610514573d6000803e3d6000fd5b505b5b838160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222768560405161058291906114e7565b60405180910390a350505050565b600181815481106105a057600080fd5b90600052602060002090600b02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff169080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a015490508c565b6000600182815481106106a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600b02019050600060038111156106f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160020160149054906101000a900460ff16600381111561073d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490611407565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082a5780600901548160050154426107e991906115d5565b11610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082090611427565b60405180910390fd5b5b60038160020160146101000a81548160ff02191690836003811115610878577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f193505050501580156108eb573d6000803e3d6000fd5b505050565b60006001805490507f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d8560405161092791906113e5565b60405180910390a260016040518061018001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156109eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001348152602001600081526020014281526020016000815260200160008152602001600081526020018581526020018481525090806001815401808255809150506001900390600052602060002090600b020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836003811115610b71577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a0155505060018080549050610bdd91906115d5565b9050949350505050565b600060018381548110610c23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600b02019050600380811115610c6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160020160149054906101000a900460ff166003811115610cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee90611487565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610da457508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda90611447565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16838260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c85604051610e6591906113e5565b60405180910390a4505050565b6000610e85610e8084611533565b611502565b905082815260208101848484011115610e9d57600080fd5b610ea884828561168e565b509392505050565b600081359050610ebf81611782565b92915050565b600082601f830112610ed657600080fd5b8135610ee6848260208601610e72565b91505092915050565b600081359050610efe81611799565b92915050565b60008060008060808587031215610f1a57600080fd5b6000610f2887828801610eb0565b945050602085013567ffffffffffffffff811115610f4557600080fd5b610f5187828801610ec5565b9350506040610f6287828801610eef565b9250506060610f7387828801610eef565b91505092959194509250565b600060208284031215610f9157600080fd5b6000610f9f84828501610eef565b91505092915050565b60008060408385031215610fbb57600080fd5b6000610fc985828601610eef565b925050602083013567ffffffffffffffff811115610fe657600080fd5b610ff285828601610ec5565b9150509250929050565b6000806040838503121561100f57600080fd5b600061101d85828601610eef565b925050602061102e85828601610eef565b9150509250929050565b61104181611609565b82525050565b61105081611658565b82525050565b61105f8161167c565b82525050565b600061107082611563565b61107a818561156e565b935061108a81856020860161169d565b6110938161175d565b840191505092915050565b60006110ab60238361156e565b91507f5472616e73616374696f6e206973206e6f7420696e20696e697469616c20737460008301527f61746500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611111601f8361156e565b91507f5061796572207374696c6c206861732074696d6520746f207265636c61696d006000830152602082019050919050565b600061115160308361156e565b91507f5468697264207061727469657320617265206e6f7420616c6c6f77656420746f60008301527f207375626d69742065766964656e6365000000000000000000000000000000006020830152604082019050919050565b60006111b760288361156e565b91507f4f6e6c79207468652061726269747261746f722063616e20657865637574652060008301527f612072756c696e670000000000000000000000000000000000000000000000006020830152604082019050919050565b600061121d60218361156e565b91507f5472616e73616374696f6e206e6f7420696e207265736f6c766564207374617460008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061128360148361156e565b91507f52756c696e67206f7574206f6620626f756e64730000000000000000000000006000830152602082019050919050565b60006112c3602d8361156e565b91507f54686572652073686f756c642062652061206469737075746520746f2065786560008301527f6375746520612072756c696e67000000000000000000000000000000000000006020830152604082019050919050565b6113258161164e565b82525050565b600061018082019050611341600083018f611038565b61134e602083018e611038565b61135b604083018d611047565b611368606083018c611056565b611375608083018b61131c565b61138260a083018a61131c565b61138f60c083018961131c565b61139c60e083018861131c565b6113aa61010083018761131c565b6113b861012083018661131c565b6113c661014083018561131c565b6113d461016083018461131c565b9d9c50505050505050505050505050565b600060208201905081810360008301526113ff8184611065565b905092915050565b600060208201905081810360008301526114208161109e565b9050919050565b6000602082019050818103600083015261144081611104565b9050919050565b6000602082019050818103600083015261146081611144565b9050919050565b60006020820190508181036000830152611480816111aa565b9050919050565b600060208201905081810360008301526114a081611210565b9050919050565b600060208201905081810360008301526114c081611276565b9050919050565b600060208201905081810360008301526114e0816112b6565b9050919050565b60006020820190506114fc600083018461131c565b92915050565b6000604051905081810181811067ffffffffffffffff821117156115295761152861172e565b5b8060405250919050565b600067ffffffffffffffff82111561154e5761154d61172e565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061158a8261164e565b91506115958361164e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115ca576115c96116d0565b5b828201905092915050565b60006115e08261164e565b91506115eb8361164e565b9250828210156115fe576115fd6116d0565b5b828203905092915050565b60006116148261162e565b9050919050565b60008190506116298261176e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116638261166a565b9050919050565b60006116758261162e565b9050919050565b60006116878261161b565b9050919050565b82818337600083830152505050565b60005b838110156116bb5780820151818401526020810190506116a0565b838111156116ca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6004811061177f5761177e6116ff565b5b50565b61178b81611609565b811461179657600080fd5b50565b6117a28161164e565b81146117ad57600080fd5b5056fea2646970667358221220e852d4bfb98cd8f0b22148d9056691886f0480a8c0207c5ae85f9416bb5bd70764736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15449:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:5"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:5"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:5"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:5"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:5"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:5"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:5",
                "type": ""
              }
            ],
            "src": "7:344:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "417:95:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "427:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "449:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "436:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "427:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "500:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "465:34:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "465:41:5"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "395:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "403:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "411:5:5",
                "type": ""
              }
            ],
            "src": "357:155:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "594:211:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "643:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "652:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "655:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "645:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "645:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "645:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "622:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "630:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "618:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "618:17:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "637:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "614:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "614:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "607:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "604:2:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "668:34:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "695:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "682:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "682:20:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "672:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:88:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "772:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "780:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "768:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "768:17:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:5"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "795:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "720:47:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:79:5"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "711:5:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "572:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "580:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "588:5:5",
                "type": ""
              }
            ],
            "src": "532:273:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "863:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "873:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "895:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "882:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "873:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "938:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "911:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "911:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "841:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "849:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "857:5:5",
                "type": ""
              }
            ],
            "src": "811:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1091:692:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1138:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1147:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1150:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1140:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1140:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1140:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1112:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1121:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1108:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1108:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1133:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1104:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1101:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1164:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1179:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1193:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1183:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1208:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1251:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1262:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1247:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1247:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1271:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1218:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1208:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1299:221:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1314:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1345:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1356:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1341:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1341:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1328:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1328:32:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1318:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1407:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1416:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1419:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1409:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1409:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1409:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1387:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1376:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1376:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1373:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1437:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1482:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1493:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1478:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1478:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1502:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1447:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1437:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1530:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1545:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1549:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1575:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1610:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1621:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1606:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1606:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1630:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1585:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1585:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1575:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1658:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1673:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1687:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1677:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1703:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1738:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1749:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1734:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1734:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1758:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1713:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1713:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1703:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_string_memory_ptrt_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1037:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1048:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1060:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1068:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1076:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1084:6:5",
                "type": ""
              }
            ],
            "src": "956:827:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:196:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1901:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1910:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1913:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1903:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1903:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1903:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1876:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1885:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1897:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1868:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1868:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1865:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1927:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1942:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1956:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1946:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1971:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2006:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2017:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2002:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2002:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2026:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1981:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1981:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1971:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1825:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1836:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1848:6:5",
                "type": ""
              }
            ],
            "src": "1789:262:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2150:427:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2196:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2205:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2208:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2198:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2198:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2198:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2171:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2180:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2167:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2192:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2163:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2163:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2160:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2222:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2237:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2251:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2241:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2266:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2301:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2312:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2297:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2297:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2321:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2276:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2276:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2266:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2349:221:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2364:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2395:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2406:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2391:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2391:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2378:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2378:32:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2368:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2457:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2466:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2469:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2459:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2459:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2459:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2429:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2437:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2426:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2423:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2487:73:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2532:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2543:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2528:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2528:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2552:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2497:30:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2497:63:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2487:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2112:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2123:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2135:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2143:6:5",
                "type": ""
              }
            ],
            "src": "2057:520:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2666:324:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2712:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2721:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2724:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2714:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2714:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2714:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2687:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2696:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2683:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2683:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2708:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2679:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2676:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2738:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2753:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2767:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2757:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2782:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2817:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2828:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2813:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2813:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2837:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2792:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2792:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2782:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2865:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2880:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2884:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2910:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2945:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2956:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2941:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2941:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2965:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2920:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2920:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2910:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2628:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2639:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2651:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2659:6:5",
                "type": ""
              }
            ],
            "src": "2583:407:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3077:61:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3094:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3125:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3099:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3099:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3087:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3087:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3087:45:5"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3065:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3072:3:5",
                "type": ""
              }
            ],
            "src": "2996:142:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3228:85:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3245:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3300:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IArbitrator_$740_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3250:49:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3250:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3238:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3238:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3238:69:5"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IArbitrator_$740_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3216:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3223:3:5",
                "type": ""
              }
            ],
            "src": "3144:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3391:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3408:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3451:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Status_$13_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3413:37:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3413:44:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3401:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:57:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3401:57:5"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Status_$13_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3379:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3386:3:5",
                "type": ""
              }
            ],
            "src": "3319:145:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3562:272:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3572:53:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3619:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3586:32:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:39:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3576:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3634:78:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3700:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3705:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3641:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:71:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3634:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3747:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3754:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:16:5"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3761:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3766:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3721:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3721:52:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3721:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3782:46:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3793:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3820:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3798:21:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3798:29:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3789:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:39:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3782:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3543:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3550:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3558:3:5",
                "type": ""
              }
            ],
            "src": "3470:364:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3986:221:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3996:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4062:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4067:2:5",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4003:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4003:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3996:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4091:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4096:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4087:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4087:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4100:34:5",
                        "type": "",
                        "value": "Transaction is not in initial st"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4080:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4080:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4080:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4156:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4161:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4152:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4152:12:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4166:5:5",
                        "type": "",
                        "value": "ate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4145:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4145:27:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4145:27:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4182:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4193:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4198:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4189:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4189:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4182:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3974:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3982:3:5",
                "type": ""
              }
            ],
            "src": "3840:367:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4359:183:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4369:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4435:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4440:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4376:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4369:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4464:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4469:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4460:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4460:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4473:33:5",
                        "type": "",
                        "value": "Payer still has time to reclaim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4453:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4453:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4517:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4528:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4533:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4524:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4524:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4517:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4347:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4355:3:5",
                "type": ""
              }
            ],
            "src": "4213:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4694:234:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4704:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4770:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4775:2:5",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4711:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4711:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4704:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4799:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4804:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4795:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4795:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4808:34:5",
                        "type": "",
                        "value": "Third parties are not allowed to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4788:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4788:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4864:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4869:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4860:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4860:12:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4874:18:5",
                        "type": "",
                        "value": " submit evidence"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4853:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:40:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4853:40:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4903:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4914:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4919:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4910:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4910:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4903:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4682:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4690:3:5",
                "type": ""
              }
            ],
            "src": "4548:380:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5080:226:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5090:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5156:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:2:5",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5097:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5097:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5090:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5185:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5190:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5181:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5181:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5194:34:5",
                        "type": "",
                        "value": "Only the arbitrator can execute "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5174:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5174:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5250:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5255:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5246:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:12:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5260:10:5",
                        "type": "",
                        "value": "a ruling"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5239:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5239:32:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5239:32:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5281:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5292:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5297:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5288:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5288:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5281:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5068:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5076:3:5",
                "type": ""
              }
            ],
            "src": "4934:372:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5458:219:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5468:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5534:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5539:2:5",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5475:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5475:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5468:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5563:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5568:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5559:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5559:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5572:34:5",
                        "type": "",
                        "value": "Transaction not in resolved stat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5552:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5552:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5628:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5633:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5624:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5624:12:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5638:3:5",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5617:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5617:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5617:25:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5652:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5663:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5668:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5659:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5659:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5652:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5446:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5454:3:5",
                "type": ""
              }
            ],
            "src": "5312:365:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5829:172:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5839:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5905:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5910:2:5",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5846:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5839:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5934:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5939:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5930:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5930:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5943:22:5",
                        "type": "",
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5923:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5923:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5923:43:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5976:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5987:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5992:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5983:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5976:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5817:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5825:3:5",
                "type": ""
              }
            ],
            "src": "5683:318:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6153:231:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6163:74:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6229:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6234:2:5",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6170:58:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6170:67:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6163:3:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6258:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6263:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6254:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6254:11:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6267:34:5",
                        "type": "",
                        "value": "There should be a dispute to exe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6247:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6247:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6323:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6328:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6319:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6319:12:5"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6333:15:5",
                        "type": "",
                        "value": "cute a ruling"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6312:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6312:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6312:37:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6359:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6370:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6375:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6366:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6366:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6359:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6141:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6149:3:5",
                "type": ""
              }
            ],
            "src": "6007:377:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6455:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6472:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6495:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6477:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6477:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6465:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6465:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6465:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6443:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6450:3:5",
                "type": ""
              }
            ],
            "src": "6390:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6980:1095:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6990:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7002:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7013:3:5",
                        "type": "",
                        "value": "384"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6998:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6990:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7087:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7100:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7111:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7096:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7096:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7027:59:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7027:87:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7027:87:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7184:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7197:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7208:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7193:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7193:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7124:59:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7124:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7124:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7285:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7298:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7309:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7294:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7294:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IArbitrator_$740_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7222:62:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7222:91:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7222:91:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7374:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7387:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7398:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7383:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7383:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Status_$13_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7323:50:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7323:79:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7323:79:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7456:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7469:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7480:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7465:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7465:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7412:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7412:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7412:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "7539:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7552:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7563:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7548:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7548:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7495:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7495:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7495:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "7622:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7635:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7646:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7631:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7631:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7578:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7578:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7578:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "7705:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7718:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7729:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7714:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7714:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7661:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7661:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7661:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "7788:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7801:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7812:3:5",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7797:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7797:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7744:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7744:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7744:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "7871:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7884:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7895:3:5",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7880:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7880:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7827:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7827:73:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "7954:7:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7968:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7979:3:5",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7964:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7964:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7910:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7910:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:74:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value11",
                        "nodeType": "YulIdentifier",
                        "src": "8038:7:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8052:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8063:3:5",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8048:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8048:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7994:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:74:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7994:74:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_payable_t_contract$_IArbitrator_$740_t_enum$_Status_$13_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_address_payable_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6862:9:5",
                "type": ""
              },
              {
                "name": "value11",
                "nodeType": "YulTypedName",
                "src": "6874:7:5",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "6883:7:5",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "6892:6:5",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "6900:6:5",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "6908:6:5",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6916:6:5",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6924:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6932:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6940:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6948:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6956:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6964:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6975:4:5",
                "type": ""
              }
            ],
            "src": "6514:1561:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8199:195:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8209:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8221:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8232:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8217:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8217:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8209:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8256:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8267:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8252:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8252:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8275:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8281:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8271:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8271:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8245:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8245:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8245:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8301:86:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8373:6:5"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8382:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8309:63:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8309:78:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8301:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8171:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8183:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8194:4:5",
                "type": ""
              }
            ],
            "src": "8081:313:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8571:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8581:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8593:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8604:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8589:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8589:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8581:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8628:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8639:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8624:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8624:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8647:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8653:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8643:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8643:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8617:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8617:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8617:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8673:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8807:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8681:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8681:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8673:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8551:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8566:4:5",
                "type": ""
              }
            ],
            "src": "8400:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8996:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9006:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9018:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9029:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9014:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9014:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9006:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9053:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9064:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9049:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9049:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9072:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9078:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9068:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9068:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9042:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9042:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9098:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9232:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9106:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9106:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9098:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8976:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8991:4:5",
                "type": ""
              }
            ],
            "src": "8825:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9421:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9431:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9443:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9454:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9439:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9439:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9431:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9478:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9489:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9474:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9474:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9497:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9503:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9493:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9493:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9467:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9467:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9467:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9523:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9657:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9531:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9531:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9523:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9401:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9416:4:5",
                "type": ""
              }
            ],
            "src": "9250:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9846:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9856:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9868:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9879:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9864:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9864:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9856:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9903:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9914:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9899:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9899:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9922:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9928:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9918:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9918:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9892:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9892:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9892:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9948:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10082:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9956:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9948:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9826:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9841:4:5",
                "type": ""
              }
            ],
            "src": "9675:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10271:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10281:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10293:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10304:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10289:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10289:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10281:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10328:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10339:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10324:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10324:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10347:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10353:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10343:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10343:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10317:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10317:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10317:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10373:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10507:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10381:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10381:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10373:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10251:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10266:4:5",
                "type": ""
              }
            ],
            "src": "10100:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10696:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10706:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10718:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10729:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10714:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10706:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10753:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10764:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10749:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10749:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10772:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10778:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10768:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10768:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10742:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10742:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10742:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10798:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10932:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10806:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10806:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10798:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10676:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10691:4:5",
                "type": ""
              }
            ],
            "src": "10525:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11121:248:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11131:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11143:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11154:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11139:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11139:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11131:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11178:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11189:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11174:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11174:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11197:4:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11203:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11193:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11193:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11167:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11167:47:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11167:47:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11223:139:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11357:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11231:124:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11231:131:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11223:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11101:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11116:4:5",
                "type": ""
              }
            ],
            "src": "10950:419:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11473:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11483:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11495:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11506:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11491:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11491:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11483:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11563:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11576:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11587:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11572:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11572:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11519:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11519:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11519:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11445:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11457:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11468:4:5",
                "type": ""
              }
            ],
            "src": "11375:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11643:243:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11653:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11669:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11663:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11663:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "11653:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11681:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "11703:6:5"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "11711:4:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11699:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11699:17:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "11685:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11827:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "11829:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11829:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11829:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "11770:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11782:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11767:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11767:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "11806:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11818:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11803:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11803:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "11764:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11764:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "11761:2:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11865:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "11869:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11858:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11858:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11858:22:5"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "11627:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11636:6:5",
                "type": ""
              }
            ],
            "src": "11603:283:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11959:265:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12064:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12066:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12066:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12066:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12036:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12044:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12033:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12033:30:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12030:2:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12116:41:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12132:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12140:4:5",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12128:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12128:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12151:4:5",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12147:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12147:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12124:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12124:33:5"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "12116:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12194:23:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "12206:4:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12212:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12202:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12202:15:5"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "12194:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11943:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "11954:4:5",
                "type": ""
              }
            ],
            "src": "11892:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12289:40:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12300:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12316:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12310:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12310:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12300:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12272:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12282:6:5",
                "type": ""
              }
            ],
            "src": "12230:99:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12431:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12448:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12453:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12441:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12441:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12441:19:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12469:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12488:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12484:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:14:5"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12469:11:5"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12403:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12408:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12419:11:5",
                "type": ""
              }
            ],
            "src": "12335:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12554:261:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12564:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12587:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12569:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12569:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12564:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12598:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12621:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12603:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12603:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12598:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12761:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12763:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12763:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12763:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12682:1:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12689:66:5",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12757:1:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12685:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12685:74:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12679:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12679:81:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12676:2:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12793:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12804:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12807:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12800:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12800:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12793:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12541:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12544:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12550:3:5",
                "type": ""
              }
            ],
            "src": "12510:305:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12866:146:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12876:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12899:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12881:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12881:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12876:1:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12910:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12933:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12915:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12915:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12910:1:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12957:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12959:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12959:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12959:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12951:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12954:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12948:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12948:8:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12945:2:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12989:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13001:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13004:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12997:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12997:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12989:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12852:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12855:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12861:4:5",
                "type": ""
              }
            ],
            "src": "12821:191:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13071:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13081:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13110:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13092:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13092:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13081:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13053:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13063:7:5",
                "type": ""
              }
            ],
            "src": "13018:104:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13182:75:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13192:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13203:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13192:7:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13245:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Status_$13",
                      "nodeType": "YulIdentifier",
                      "src": "13209:35:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13209:42:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13209:42:5"
                }
              ]
            },
            "name": "cleanup_t_enum$_Status_$13",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13164:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13174:7:5",
                "type": ""
              }
            ],
            "src": "13128:129:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13308:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13318:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13333:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13340:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13329:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13329:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13318:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13290:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13300:7:5",
                "type": ""
              }
            ],
            "src": "13263:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13440:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13450:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13461:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13450:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13422:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13432:7:5",
                "type": ""
              }
            ],
            "src": "13395:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13557:85:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13567:69:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13630:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_IArbitrator_$740_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13580:49:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13580:56:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13567:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrator_$740_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13537:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13547:9:5",
                "type": ""
              }
            ],
            "src": "13478:164:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13727:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13737:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13768:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13750:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13750:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13737:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IArbitrator_$740_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13707:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13717:9:5",
                "type": ""
              }
            ],
            "src": "13648:132:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13853:62:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13863:46:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13903:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Status_$13",
                      "nodeType": "YulIdentifier",
                      "src": "13876:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13876:33:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "13863:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Status_$13_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13833:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13843:9:5",
                "type": ""
              }
            ],
            "src": "13786:129:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13972:103:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "13995:3:5"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "14000:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14005:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "13982:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13982:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13982:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "14053:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14058:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14049:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14049:16:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14067:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14042:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14042:27:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14042:27:5"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "13954:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "13959:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13964:6:5",
                "type": ""
              }
            ],
            "src": "13921:154:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14130:258:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14140:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14149:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14144:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14209:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14234:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14239:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14230:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14230:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14253:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14258:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14249:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14249:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14243:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14243:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14223:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14223:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14223:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14170:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14173:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14167:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14167:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14181:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14183:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14192:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14195:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14188:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14188:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14183:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14163:3:5",
                    "statements": []
                  },
                  "src": "14159:113:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14306:76:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14356:3:5"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14361:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14352:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14352:16:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14370:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14345:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14345:27:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14345:27:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14287:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14290:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14284:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14284:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14281:2:5"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14112:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14117:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14122:6:5",
                "type": ""
              }
            ],
            "src": "14081:307:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14422:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14439:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14442:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14432:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14432:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14432:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14536:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14539:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14529:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14529:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14529:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14560:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14563:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14553:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14553:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14553:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14394:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14608:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14625:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14628:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14618:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14618:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14618:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14722:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14725:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14715:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14715:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14715:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14746:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14749:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14739:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14739:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14739:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14580:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14794:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14811:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14814:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14804:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14804:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14804:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14908:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14911:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14901:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14901:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14901:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14932:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14935:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14925:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14925:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14925:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14766:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15000:54:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15010:38:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15028:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15035:2:5",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15024:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15024:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15044:2:5",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15040:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15040:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15020:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15020:28:5"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "15010:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14983:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "14993:6:5",
                "type": ""
              }
            ],
            "src": "14952:102:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15112:62:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15146:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "15148:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15148:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15148:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15135:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15142:1:5",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15132:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15132:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15125:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15125:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "15122:2:5"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Status_$13",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15105:5:5",
                "type": ""
              }
            ],
            "src": "15060:114:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15231:87:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15296:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15305:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15308:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15298:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15298:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15298:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15254:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15287:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "15261:25:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15261:32:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15251:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15251:43:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15244:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15244:51:5"
                  },
                  "nodeType": "YulIf",
                  "src": "15241:2:5"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15224:5:5",
                "type": ""
              }
            ],
            "src": "15180:138:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15367:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15424:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15433:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15436:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15426:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15426:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15426:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15390:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15415:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15397:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15397:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15387:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15387:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15380:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15380:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "15377:2:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15360:5:5",
                "type": ""
              }
            ],
            "src": "15324:122:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_contract$_IArbitrator_$740_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IArbitrator_$740_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_Status_$13_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$13_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"Transaction is not in initial st\")\n\n        mstore(add(pos, 32), \"ate\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"Payer still has time to reclaim\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n\n        mstore(add(pos, 0), \"Third parties are not allowed to\")\n\n        mstore(add(pos, 32), \" submit evidence\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"Only the arbitrator can execute \")\n\n        mstore(add(pos, 32), \"a ruling\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"Transaction not in resolved stat\")\n\n        mstore(add(pos, 32), \"e\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"Ruling out of bounds\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n\n        mstore(add(pos, 0), \"There should be a dispute to exe\")\n\n        mstore(add(pos, 32), \"cute a ruling\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_contract$_IArbitrator_$740_t_enum$_Status_$13_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_payable_t_address_payable_t_address_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IArbitrator_$740_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_Status_$13_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_Status_$13(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$13(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IArbitrator_$740_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IArbitrator_$740_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IArbitrator_$740_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_Status_$13_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$13(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_Status_$13(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "177:3927:0:-:0;;;569:42;525:87;;;;;;;;;;;;;;;;;;;;177:3927;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "177:3927:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:1042;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;963:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1865:595;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1049:812;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3660:442;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2614:1042;2687:12;2702:21;:33;2724:10;2702:33;;;;;;;;;;;;2687:48;;2741:28;2772:9;2782:4;2772:15;;;;;;;;;;;;;;;;;;;;;;;;;;2741:46;;2895:11;:22;;;;;;;;;;;;2873:45;;:10;:45;;;2865:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3045:15;3023:37;;;;;;;;;;;;;;;;:11;:18;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;3015:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;383:1;3124:7;:32;;3116:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3209:15;3188:11;:18;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3329:23;3321:32;;;;;;;;;;;;;;;;3310:7;:43;3306:284;;;3363:11;:17;;;;;;;;;;;;:26;;:75;3410:11;:27;;;3390:11;:17;;;:47;;;;:::i;:::-;3363:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:284;;;3474:23;3466:32;;;;;;;;;;;;;;;;3455:7;:43;3451:139;;;3508:11;:17;;;;;;;;;;;;:26;;:75;3555:11;:27;;;3535:11;:17;;;:47;;;;:::i;:::-;3508:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3451:139;3306:284;3631:10;3607:11;:22;;;;;;;;;;;;3600:51;;;3643:7;3600:51;;;;;;:::i;:::-;;;;;;;;2614:1042;;;;:::o;963:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1865:595::-;1921:28;1952:9;1962:11;1952:22;;;;;;;;;;;;;;;;;;;;;;;;;;1921:53;;2010:14;1988:36;;;;;;;;;;;;;;;;:11;:18;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;1980:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2161:11;:17;;;;;;;;;;;;2147:31;;:10;:31;;;2143:167;;2238:11;:29;;;2214:11;:21;;;2196:15;:39;;;;:::i;:::-;:71;2188:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2143:167;2389:15;2368:11;:18;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2410:11;:17;;;;;;;;;;;;:26;;:45;2437:11;:17;;;2410:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:595;;:::o;1049:812::-;1243:18;1289:9;:16;;;;1276:45;1307:13;1276:45;;;;;;:::i;:::-;;;;;;;;1330:9;1354:452;;;;;;;;1390:10;1354:452;;;;;;1420:6;1354:452;;;;;;1450:17;;;;;;;;;;1354:452;;;;;;1487:14;1354:452;;;;;;;;;;;;;;;;;;;;1520:9;1354:452;;;;1552:1;1354:452;;;;1576:15;1354:452;;;;1616:1;1354:452;;;;1646:1;1354:452;;;;1676:1;1354:452;;;;1708:18;1354:452;;;;1767:28;1354:452;;;1330:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:1;1836:9;:16;;;;:20;;;;:::i;:::-;1823:33;;1049:812;;;;;;:::o;3660:442::-;3743:28;3774:9;3784:11;3774:22;;;;;;;;;;;;;;;;;;;;;;;;;;3743:53;;3832:15;3810:37;;;;;;;;;;;;;;;;:11;:18;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;3802:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3913:11;:17;;;;;;;;;;;;3899:31;;:10;:31;;;:66;;;;3948:11;:17;;;;;;;;;;;;3934:31;;:10;:31;;;3899:66;3891:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;4075:10;4029:68;;4062:11;4038;:22;;;;;;;;;;;;4029:68;;;4087:9;4029:68;;;;;;:::i;:::-;;;;;;;;3660:442;;;:::o;7:344:5:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:155::-;;449:6;436:20;427:29;;465:41;500:5;465:41;:::i;:::-;417:95;;;;:::o;532:273::-;;637:3;630:4;622:6;618:17;614:27;604:2;;655:1;652;645:12;604:2;695:6;682:20;720:79;795:3;787:6;780:4;772:6;768:17;720:79;:::i;:::-;711:88;;594:211;;;;;:::o;811:139::-;;895:6;882:20;873:29;;911:33;938:5;911:33;:::i;:::-;863:87;;;;:::o;956:827::-;;;;;1133:3;1121:9;1112:7;1108:23;1104:33;1101:2;;;1150:1;1147;1140:12;1101:2;1193:1;1218:61;1271:7;1262:6;1251:9;1247:22;1218:61;:::i;:::-;1208:71;;1164:125;1356:2;1345:9;1341:18;1328:32;1387:18;1379:6;1376:30;1373:2;;;1419:1;1416;1409:12;1373:2;1447:63;1502:7;1493:6;1482:9;1478:22;1447:63;:::i;:::-;1437:73;;1299:221;1559:2;1585:53;1630:7;1621:6;1610:9;1606:22;1585:53;:::i;:::-;1575:63;;1530:118;1687:2;1713:53;1758:7;1749:6;1738:9;1734:22;1713:53;:::i;:::-;1703:63;;1658:118;1091:692;;;;;;;:::o;1789:262::-;;1897:2;1885:9;1876:7;1872:23;1868:32;1865:2;;;1913:1;1910;1903:12;1865:2;1956:1;1981:53;2026:7;2017:6;2006:9;2002:22;1981:53;:::i;:::-;1971:63;;1927:117;1855:196;;;;:::o;2057:520::-;;;2192:2;2180:9;2171:7;2167:23;2163:32;2160:2;;;2208:1;2205;2198:12;2160:2;2251:1;2276:53;2321:7;2312:6;2301:9;2297:22;2276:53;:::i;:::-;2266:63;;2222:117;2406:2;2395:9;2391:18;2378:32;2437:18;2429:6;2426:30;2423:2;;;2469:1;2466;2459:12;2423:2;2497:63;2552:7;2543:6;2532:9;2528:22;2497:63;:::i;:::-;2487:73;;2349:221;2150:427;;;;;:::o;2583:407::-;;;2708:2;2696:9;2687:7;2683:23;2679:32;2676:2;;;2724:1;2721;2714:12;2676:2;2767:1;2792:53;2837:7;2828:6;2817:9;2813:22;2792:53;:::i;:::-;2782:63;;2738:117;2894:2;2920:53;2965:7;2956:6;2945:9;2941:22;2920:53;:::i;:::-;2910:63;;2865:118;2666:324;;;;;:::o;2996:142::-;3099:32;3125:5;3099:32;:::i;:::-;3094:3;3087:45;3077:61;;:::o;3144:169::-;3250:56;3300:5;3250:56;:::i;:::-;3245:3;3238:69;3228:85;;:::o;3319:145::-;3413:44;3451:5;3413:44;:::i;:::-;3408:3;3401:57;3391:73;;:::o;3470:364::-;;3586:39;3619:5;3586:39;:::i;:::-;3641:71;3705:6;3700:3;3641:71;:::i;:::-;3634:78;;3721:52;3766:6;3761:3;3754:4;3747:5;3743:16;3721:52;:::i;:::-;3798:29;3820:6;3798:29;:::i;:::-;3793:3;3789:39;3782:46;;3562:272;;;;;:::o;3840:367::-;;4003:67;4067:2;4062:3;4003:67;:::i;:::-;3996:74;;4100:34;4096:1;4091:3;4087:11;4080:55;4166:5;4161:2;4156:3;4152:12;4145:27;4198:2;4193:3;4189:12;4182:19;;3986:221;;;:::o;4213:329::-;;4376:67;4440:2;4435:3;4376:67;:::i;:::-;4369:74;;4473:33;4469:1;4464:3;4460:11;4453:54;4533:2;4528:3;4524:12;4517:19;;4359:183;;;:::o;4548:380::-;;4711:67;4775:2;4770:3;4711:67;:::i;:::-;4704:74;;4808:34;4804:1;4799:3;4795:11;4788:55;4874:18;4869:2;4864:3;4860:12;4853:40;4919:2;4914:3;4910:12;4903:19;;4694:234;;;:::o;4934:372::-;;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5194:34;5190:1;5185:3;5181:11;5174:55;5260:10;5255:2;5250:3;5246:12;5239:32;5297:2;5292:3;5288:12;5281:19;;5080:226;;;:::o;5312:365::-;;5475:67;5539:2;5534:3;5475:67;:::i;:::-;5468:74;;5572:34;5568:1;5563:3;5559:11;5552:55;5638:3;5633:2;5628:3;5624:12;5617:25;5668:2;5663:3;5659:12;5652:19;;5458:219;;;:::o;5683:318::-;;5846:67;5910:2;5905:3;5846:67;:::i;:::-;5839:74;;5943:22;5939:1;5934:3;5930:11;5923:43;5992:2;5987:3;5983:12;5976:19;;5829:172;;;:::o;6007:377::-;;6170:67;6234:2;6229:3;6170:67;:::i;:::-;6163:74;;6267:34;6263:1;6258:3;6254:11;6247:55;6333:15;6328:2;6323:3;6319:12;6312:37;6375:2;6370:3;6366:12;6359:19;;6153:231;;;:::o;6390:118::-;6477:24;6495:5;6477:24;:::i;:::-;6472:3;6465:37;6455:53;;:::o;6514:1561::-;;7013:3;7002:9;6998:19;6990:27;;7027:87;7111:1;7100:9;7096:17;7087:6;7027:87;:::i;:::-;7124:88;7208:2;7197:9;7193:18;7184:6;7124:88;:::i;:::-;7222:91;7309:2;7298:9;7294:18;7285:6;7222:91;:::i;:::-;7323:79;7398:2;7387:9;7383:18;7374:6;7323:79;:::i;:::-;7412:73;7480:3;7469:9;7465:19;7456:6;7412:73;:::i;:::-;7495;7563:3;7552:9;7548:19;7539:6;7495:73;:::i;:::-;7578;7646:3;7635:9;7631:19;7622:6;7578:73;:::i;:::-;7661;7729:3;7718:9;7714:19;7705:6;7661:73;:::i;:::-;7744;7812:3;7801:9;7797:19;7788:6;7744:73;:::i;:::-;7827;7895:3;7884:9;7880:19;7871:6;7827:73;:::i;:::-;7910:74;7979:3;7968:9;7964:19;7954:7;7910:74;:::i;:::-;7994;8063:3;8052:9;8048:19;8038:7;7994:74;:::i;:::-;6980:1095;;;;;;;;;;;;;;;:::o;8081:313::-;;8232:2;8221:9;8217:18;8209:26;;8281:9;8275:4;8271:20;8267:1;8256:9;8252:17;8245:47;8309:78;8382:4;8373:6;8309:78;:::i;:::-;8301:86;;8199:195;;;;:::o;8400:419::-;;8604:2;8593:9;8589:18;8581:26;;8653:9;8647:4;8643:20;8639:1;8628:9;8624:17;8617:47;8681:131;8807:4;8681:131;:::i;:::-;8673:139;;8571:248;;;:::o;8825:419::-;;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:131;9232:4;9106:131;:::i;:::-;9098:139;;8996:248;;;:::o;9250:419::-;;9454:2;9443:9;9439:18;9431:26;;9503:9;9497:4;9493:20;9489:1;9478:9;9474:17;9467:47;9531:131;9657:4;9531:131;:::i;:::-;9523:139;;9421:248;;;:::o;9675:419::-;;9879:2;9868:9;9864:18;9856:26;;9928:9;9922:4;9918:20;9914:1;9903:9;9899:17;9892:47;9956:131;10082:4;9956:131;:::i;:::-;9948:139;;9846:248;;;:::o;10100:419::-;;10304:2;10293:9;10289:18;10281:26;;10353:9;10347:4;10343:20;10339:1;10328:9;10324:17;10317:47;10381:131;10507:4;10381:131;:::i;:::-;10373:139;;10271:248;;;:::o;10525:419::-;;10729:2;10718:9;10714:18;10706:26;;10778:9;10772:4;10768:20;10764:1;10753:9;10749:17;10742:47;10806:131;10932:4;10806:131;:::i;:::-;10798:139;;10696:248;;;:::o;10950:419::-;;11154:2;11143:9;11139:18;11131:26;;11203:9;11197:4;11193:20;11189:1;11178:9;11174:17;11167:47;11231:131;11357:4;11231:131;:::i;:::-;11223:139;;11121:248;;;:::o;11375:222::-;;11506:2;11495:9;11491:18;11483:26;;11519:71;11587:1;11576:9;11572:17;11563:6;11519:71;:::i;:::-;11473:124;;;;:::o;11603:283::-;;11669:2;11663:9;11653:19;;11711:4;11703:6;11699:17;11818:6;11806:10;11803:22;11782:18;11770:10;11767:34;11764:62;11761:2;;;11829:18;;:::i;:::-;11761:2;11869:10;11865:2;11858:22;11643:243;;;;:::o;11892:332::-;;12044:18;12036:6;12033:30;12030:2;;;12066:18;;:::i;:::-;12030:2;12151:4;12147:9;12140:4;12132:6;12128:17;12124:33;12116:41;;12212:4;12206;12202:15;12194:23;;11959:265;;;:::o;12230:99::-;;12316:5;12310:12;12300:22;;12289:40;;;:::o;12335:169::-;;12453:6;12448:3;12441:19;12493:4;12488:3;12484:14;12469:29;;12431:73;;;;:::o;12510:305::-;;12569:20;12587:1;12569:20;:::i;:::-;12564:25;;12603:20;12621:1;12603:20;:::i;:::-;12598:25;;12757:1;12689:66;12685:74;12682:1;12679:81;12676:2;;;12763:18;;:::i;:::-;12676:2;12807:1;12804;12800:9;12793:16;;12554:261;;;;:::o;12821:191::-;;12881:20;12899:1;12881:20;:::i;:::-;12876:25;;12915:20;12933:1;12915:20;:::i;:::-;12910:25;;12954:1;12951;12948:8;12945:2;;;12959:18;;:::i;:::-;12945:2;13004:1;13001;12997:9;12989:17;;12866:146;;;;:::o;13018:104::-;;13092:24;13110:5;13092:24;:::i;:::-;13081:35;;13071:51;;;:::o;13128:129::-;;13203:5;13192:16;;13209:42;13245:5;13209:42;:::i;:::-;13182:75;;;:::o;13263:126::-;;13340:42;13333:5;13329:54;13318:65;;13308:81;;;:::o;13395:77::-;;13461:5;13450:16;;13440:32;;;:::o;13478:164::-;;13580:56;13630:5;13580:56;:::i;:::-;13567:69;;13557:85;;;:::o;13648:132::-;;13750:24;13768:5;13750:24;:::i;:::-;13737:37;;13727:53;;;:::o;13786:129::-;;13876:33;13903:5;13876:33;:::i;:::-;13863:46;;13853:62;;;:::o;13921:154::-;14005:6;14000:3;13995;13982:30;14067:1;14058:6;14053:3;14049:16;14042:27;13972:103;;;:::o;14081:307::-;14149:1;14159:113;14173:6;14170:1;14167:13;14159:113;;;14258:1;14253:3;14249:11;14243:18;14239:1;14234:3;14230:11;14223:39;14195:2;14192:1;14188:10;14183:15;;14159:113;;;14290:6;14287:1;14284:13;14281:2;;;14370:1;14361:6;14356:3;14352:16;14345:27;14281:2;14130:258;;;;:::o;14394:180::-;14442:77;14439:1;14432:88;14539:4;14536:1;14529:15;14563:4;14560:1;14553:15;14580:180;14628:77;14625:1;14618:88;14725:4;14722:1;14715:15;14749:4;14746:1;14739:15;14766:180;14814:77;14811:1;14804:88;14911:4;14908:1;14901:15;14935:4;14932:1;14925:15;14952:102;;15044:2;15040:7;15035:2;15028:5;15024:14;15020:28;15010:38;;15000:54;;;:::o;15060:114::-;15142:1;15135:5;15132:12;15122:2;;15148:18;;:::i;:::-;15122:2;15112:62;:::o;15180:138::-;15261:32;15287:5;15261:32;:::i;:::-;15254:5;15251:43;15241:2;;15308:1;15305;15298:12;15241:2;15231:87;:::o;15324:122::-;15397:24;15415:5;15397:24;:::i;:::-;15390:5;15387:35;15377:2;;15436:1;15433;15426:12;15377:2;15367:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IArbitrable.sol\";\nimport \"./interfaces/IArbitrator.sol\";\nimport \"./interfaces/IEvidence.sol\";\n\ncontract Escrow is IArbitrable, IEvidence {\n  enum Status {Initial, Reclaimed, Disputed, Resolved}\n  enum RulingOptions {RefusedToArbitrate, PayerWins, PayeeWins}\n  uint256 constant numberOfRulingOptions = 2;\n  // for now, default arbitrator is Kleros Court on Kovan (later change to mainnet)\n  // why does wrapping address in IArbitrator work??\n  IArbitrator defaultArbitrator = IArbitrator(0x60B2AbfDfaD9c0873242f59f2A8c32A3Cc682f80);\n\n  struct Contract {\n    address payable payer;\n    address payable payee;\n    IArbitrator arbitrator;\n    Status status;\n    uint256 value;\n    uint256 disputeID;\n    uint256 createdAt;\n    uint256 reclaimedAt;\n    uint256 payerFeeDeposit;\n    uint256 payeeFeeDeposit;\n    uint256 reclamationPeriod;\n    uint256 arbitrationFeeDepositPeriod;\n  }\n\n  Contract[] public contracts;\n  mapping (uint256 => uint256) disputeIDtoContractID;\n\n  function createNewContract(\n    address payable _payee,\n    string memory _metaEvidence, \n    uint256 _reclamationPeriod, \n    uint256 _arbitrationFeeDepositPeriod\n    ) public payable returns (uint256 contractID) {\n      emit MetaEvidence(contracts.length, _metaEvidence);\n\n      contracts.push(\n        Contract({\n          payer: payable(msg.sender),\n          payee: _payee,\n          arbitrator: defaultArbitrator,\n          status: Status.Initial,\n          value: msg.value,\n          disputeID: 0,\n          createdAt: block.timestamp,\n          reclaimedAt: 0,\n          payerFeeDeposit: 0,\n          payeeFeeDeposit: 0,\n          reclamationPeriod: _reclamationPeriod,\n          arbitrationFeeDepositPeriod: _arbitrationFeeDepositPeriod\n        })\n      );\n\n      contractID = contracts.length - 1;\n  }\n\n  function releaseFunds(uint256 _contractID) public {\n    Contract storage transaction = contracts[_contractID];\n    require(transaction.status == Status.Initial, \"Transaction is not in initial state\");\n\n    // payee can only reclaim funds if the reclamationPeriod has passed\n    if (msg.sender != transaction.payer) {\n      require(block.timestamp - transaction.createdAt > transaction.reclamationPeriod, \"Payer still has time to reclaim\");\n    }\n\n    // payer can release funds to payee at any time\n    transaction.status = Status.Resolved;\n    transaction.payee.transfer(transaction.value);\n  }\n\n  // this is the place where we put the rules to enforce the ruling, which the arbitrator decides\n  // Note: does NOT handle refusedToArbitrate event\n  function rule(uint256 _disputeID, uint256 _ruling) override public {\n    uint256 txID = disputeIDtoContractID[_disputeID];\n    Contract storage transaction = contracts[txID];\n\n    // first check if the caller has the right to rule on the contract\n    require(msg.sender == address(transaction.arbitrator), \"Only the arbitrator can execute a ruling\");\n    // require status to be in disputed state\n    require(transaction.status == Status.Disputed, \"There should be a dispute to execute a ruling\");\n    require(_ruling <= numberOfRulingOptions, \"Ruling out of bounds\");\n\n    transaction.status = Status.Resolved;\n    // return contract balance (escrowFunds + arbitratorFee) to whoever won\n    if (_ruling == uint256(RulingOptions.PayerWins)) {\n      transaction.payer.transfer(transaction.value + transaction.payerFeeDeposit);\n    } else if (_ruling == uint256(RulingOptions.PayeeWins)) {\n      transaction.payee.transfer(transaction.value + transaction.payeeFeeDeposit);\n    }\n    emit Ruling(transaction.arbitrator, _disputeID, _ruling);\n  }\n\n  function submitEvidence(uint256 _contractID, string memory _evidence) public {\n    Contract storage transaction = contracts[_contractID];\n    require(transaction.status != Status.Resolved, \"Transaction not in resolved state\");\n    require(msg.sender == transaction.payer || msg.sender == transaction.payee, \"Third parties are not allowed to submit evidence\");\n    emit Evidence(transaction.arbitrator, _contractID, msg.sender, _evidence);\n  }\n}",
  "sourcePath": "/home/victor/kairos/backend/contracts/Escrow.sol",
  "ast": {
    "absolutePath": "/home/victor/kairos/backend/contracts/Escrow.sol",
    "exportedSymbols": {
      "Escrow": [
        326
      ],
      "IArbitrable": [
        644
      ],
      "IArbitrator": [
        740
      ],
      "IEvidence": [
        776
      ]
    },
    "id": 327,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IArbitrable.sol",
        "file": "./interfaces/IArbitrable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 645,
        "src": "61:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IArbitrator.sol",
        "file": "./interfaces/IArbitrator.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 741,
        "src": "100:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IEvidence.sol",
        "file": "./interfaces/IEvidence.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 777,
        "src": "139:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IArbitrable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 644,
              "src": "196:11:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "196:11:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "IEvidence",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 776,
              "src": "209:9:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "209:9:0"
          }
        ],
        "contractDependencies": [
          644,
          776
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 326,
        "linearizedBaseContracts": [
          326,
          776,
          644
        ],
        "name": "Escrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Escrow.Status",
            "id": 13,
            "members": [
              {
                "id": 9,
                "name": "Initial",
                "nodeType": "EnumValue",
                "src": "236:7:0"
              },
              {
                "id": 10,
                "name": "Reclaimed",
                "nodeType": "EnumValue",
                "src": "245:9:0"
              },
              {
                "id": 11,
                "name": "Disputed",
                "nodeType": "EnumValue",
                "src": "256:8:0"
              },
              {
                "id": 12,
                "name": "Resolved",
                "nodeType": "EnumValue",
                "src": "266:8:0"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "223:52:0"
          },
          {
            "canonicalName": "Escrow.RulingOptions",
            "id": 17,
            "members": [
              {
                "id": 14,
                "name": "RefusedToArbitrate",
                "nodeType": "EnumValue",
                "src": "298:18:0"
              },
              {
                "id": 15,
                "name": "PayerWins",
                "nodeType": "EnumValue",
                "src": "318:9:0"
              },
              {
                "id": 16,
                "name": "PayeeWins",
                "nodeType": "EnumValue",
                "src": "329:9:0"
              }
            ],
            "name": "RulingOptions",
            "nodeType": "EnumDefinition",
            "src": "278:61:0"
          },
          {
            "constant": true,
            "id": 20,
            "mutability": "constant",
            "name": "numberOfRulingOptions",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "342:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "342:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "383:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "defaultArbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "525:87:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IArbitrator_$740",
              "typeString": "contract IArbitrator"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "IArbitrator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 740,
                "src": "525:11:0"
              },
              "referencedDeclaration": 740,
              "src": "525:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$740",
                "typeString": "contract IArbitrator"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836304232416266446661443963303837333234326635396632413863333241334363363832663830",
                  "id": 24,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "569:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x60B2AbfDfaD9c0873242f59f2A8c32A3Cc682f80"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 23,
                "name": "IArbitrator",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 740,
                "src": "557:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IArbitrator_$740_$",
                  "typeString": "type(contract IArbitrator)"
                }
              },
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "557:55:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$740",
                "typeString": "contract IArbitrator"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Escrow.Contract",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "payer",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "639:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "payee",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "666:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "arbitrator",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "693:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrator_$740",
                  "typeString": "contract IArbitrator"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "IArbitrator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 740,
                    "src": "693:11:0"
                  },
                  "referencedDeclaration": 740,
                  "src": "693:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrator_$740",
                    "typeString": "contract IArbitrator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "721:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$13",
                  "typeString": "enum Escrow.Status"
                },
                "typeName": {
                  "id": 35,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 34,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 13,
                    "src": "721:6:0"
                  },
                  "referencedDeclaration": 13,
                  "src": "721:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$13",
                    "typeString": "enum Escrow.Status"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "740:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "disputeID",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "759:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "759:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "createdAt",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "782:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "reclaimedAt",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "805:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "payerFeeDeposit",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "830:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "830:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "payeeFeeDeposit",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "859:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "reclamationPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "888:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "888:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "arbitrationFeeDepositPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "919:35:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "919:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Contract",
            "nodeType": "StructDefinition",
            "scope": 326,
            "src": "617:342:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "474da79a",
            "id": 57,
            "mutability": "mutable",
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "963:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
              "typeString": "struct Escrow.Contract[]"
            },
            "typeName": {
              "baseType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Contract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "963:8:0"
                },
                "referencedDeclaration": 53,
                "src": "963:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                  "typeString": "struct Escrow.Contract"
                }
              },
              "id": 56,
              "nodeType": "ArrayTypeName",
              "src": "963:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage_ptr",
                "typeString": "struct Escrow.Contract[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "disputeIDtoContractID",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "994:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1014:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1263:598:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 75,
                          "name": "contracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1289:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                            "typeString": "struct Escrow.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_metaEvidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1307:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "1276:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "1271:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 86,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1390:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1390:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1382:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 84,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1382:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1382:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 89,
                            "name": "_payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1420:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 90,
                            "name": "defaultArbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1450:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$740",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          {
                            "expression": {
                              "id": 91,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1487:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                                "typeString": "type(enum Escrow.Status)"
                              }
                            },
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Initial",
                            "nodeType": "MemberAccess",
                            "src": "1487:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$13",
                              "typeString": "enum Escrow.Status"
                            }
                          },
                          {
                            "expression": {
                              "id": 93,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1520:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1520:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1552:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "id": 96,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1576:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1576:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1616:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1646:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1676:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 101,
                            "name": "_reclamationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1708:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 102,
                            "name": "_arbitrationFeeDepositPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1767:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_contract$_IArbitrator_$740",
                              "typeString": "contract IArbitrator"
                            },
                            {
                              "typeIdentifier": "t_enum$_Status_$13",
                              "typeString": "enum Escrow.Status"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 83,
                          "name": "Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1354:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Contract_$53_storage_ptr_$",
                            "typeString": "type(struct Escrow.Contract storage pointer)"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "payer",
                          "payee",
                          "arbitrator",
                          "status",
                          "value",
                          "disputeID",
                          "createdAt",
                          "reclaimedAt",
                          "payerFeeDeposit",
                          "payeeFeeDeposit",
                          "reclamationPeriod",
                          "arbitrationFeeDepositPeriod"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1354:452:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_memory_ptr",
                          "typeString": "struct Escrow.Contract memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Contract_$53_memory_ptr",
                          "typeString": "struct Escrow.Contract memory"
                        }
                      ],
                      "expression": {
                        "id": 80,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1330:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                          "typeString": "struct Escrow.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1330:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Contract_$53_storage_$returns$__$",
                        "typeString": "function (struct Escrow.Contract storage ref)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:484:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:484:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1823:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 107,
                          "name": "contracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1836:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                            "typeString": "struct Escrow.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1836:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1836:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1823:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:33:0"
                }
              ]
            },
            "functionSelector": "4e97202e",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1081:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1109:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_reclamationPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1143:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_arbitrationFeeDepositPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1176:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:143:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1243:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:20:0"
            },
            "scope": 326,
            "src": "1049:812:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1915:545:0",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1921:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 120,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 119,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "1921:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "1921:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "baseExpression": {
                      "id": 122,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1952:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 124,
                    "indexExpression": {
                      "id": 123,
                      "name": "_contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1962:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1952:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 127,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1988:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "1988:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 129,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2010:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Initial",
                          "nodeType": "MemberAccess",
                          "src": "2010:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "1988:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206973206e6f7420696e20696e697469616c207374617465",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040",
                          "typeString": "literal_string \"Transaction is not in initial state\""
                        },
                        "value": "Transaction is not in initial state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040",
                          "typeString": "literal_string \"Transaction is not in initial state\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1980:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:84:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 135,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2147:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2147:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 137,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "payer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2161:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2147:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "nodeType": "IfStatement",
                  "src": "2143:167:0",
                  "trueBody": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "2180:130:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 141,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "2196:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2196:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 143,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 121,
                                    "src": "2214:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 144,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 42,
                                  "src": "2214:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2196:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 146,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "2238:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reclamationPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50,
                                "src": "2238:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2196:71:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796572207374696c6c206861732074696d6520746f207265636c61696d",
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2269:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744",
                                "typeString": "literal_string \"Payer still has time to reclaim\""
                              },
                              "value": "Payer still has time to reclaim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744",
                                "typeString": "literal_string \"Payer still has time to reclaim\""
                              }
                            ],
                            "id": 140,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2188:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2188:115:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151,
                        "nodeType": "ExpressionStatement",
                        "src": "2188:115:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 154,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2368:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2368:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2389:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                          "typeString": "type(enum Escrow.Status)"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Resolved",
                      "nodeType": "MemberAccess",
                      "src": "2389:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "src": "2368:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$13",
                      "typeString": "enum Escrow.Status"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 166,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2437:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "2437:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 161,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2410:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "payee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2410:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2410:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:45:0"
                }
              ]
            },
            "functionSelector": "4d68282f",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1887:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:21:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1915:0:0"
            },
            "scope": 326,
            "src": "1865:595:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              643
            ],
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2681:975:0",
              "statements": [
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "txID",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "2687:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "baseExpression": {
                      "id": 181,
                      "name": "disputeIDtoContractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2702:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 183,
                    "indexExpression": {
                      "id": 182,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2724:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2702:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2687:48:0"
                },
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "2741:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 185,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "2741:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "2741:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "baseExpression": {
                      "id": 188,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "2772:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "id": 189,
                      "name": "txID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2782:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2772:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2741:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2873:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2873:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 197,
                                "name": "transaction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "2895:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                  "typeString": "struct Escrow.Contract storage pointer"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "2895:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$740",
                                "typeString": "contract IArbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IArbitrator_$740",
                                "typeString": "contract IArbitrator"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2887:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2887:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2887:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2873:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652061726269747261746f722063616e206578656375746520612072756c696e67",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2920:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d",
                          "typeString": "literal_string \"Only the arbitrator can execute a ruling\""
                        },
                        "value": "Only the arbitrator can execute a ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d",
                          "typeString": "literal_string \"Only the arbitrator can execute a ruling\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:98:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 205,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "3023:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3023:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 207,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3045:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Disputed",
                          "nodeType": "MemberAccess",
                          "src": "3045:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "3023:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686572652073686f756c642062652061206469737075746520746f206578656375746520612072756c696e67",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3062:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646",
                          "typeString": "literal_string \"There should be a dispute to execute a ruling\""
                        },
                        "value": "There should be a dispute to execute a ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646",
                          "typeString": "literal_string \"There should be a dispute to execute a ruling\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3015:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3015:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:95:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 214,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "3124:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 215,
                          "name": "numberOfRulingOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3135:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3124:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e6473",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        },
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3116:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:65:0"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 220,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3188:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "3188:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 223,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3209:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                          "typeString": "type(enum Escrow.Status)"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Resolved",
                      "nodeType": "MemberAccess",
                      "src": "3209:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "src": "3188:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$13",
                      "typeString": "enum Escrow.Status"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "3310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 230,
                            "name": "RulingOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3329:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$17_$",
                              "typeString": "type(enum Escrow.RulingOptions)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PayerWins",
                          "nodeType": "MemberAccess",
                          "src": "3329:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$17",
                            "typeString": "enum Escrow.RulingOptions"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_RulingOptions_$17",
                            "typeString": "enum Escrow.RulingOptions"
                          }
                        ],
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3321:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3321:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3321:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3310:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 247,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3455:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 250,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "3474:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$17_$",
                                "typeString": "type(enum Escrow.RulingOptions)"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PayeeWins",
                            "nodeType": "MemberAccess",
                            "src": "3474:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$17",
                              "typeString": "enum Escrow.RulingOptions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_RulingOptions_$17",
                              "typeString": "enum Escrow.RulingOptions"
                            }
                          ],
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 248,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3466:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3466:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3455:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 267,
                    "nodeType": "IfStatement",
                    "src": "3451:139:0",
                    "trueBody": {
                      "id": 266,
                      "nodeType": "Block",
                      "src": "3500:90:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 259,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "3535:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 260,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3535:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 261,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "3555:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payeeFeeDeposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "3555:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3535:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 254,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3508:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 257,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30,
                                "src": "3508:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "3508:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3508:75:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 265,
                          "nodeType": "ExpressionStatement",
                          "src": "3508:75:0"
                        }
                      ]
                    }
                  },
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "3306:284:0",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "3355:90:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 239,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3390:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 240,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38,
                                "src": "3390:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 241,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3410:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payerFeeDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46,
                                "src": "3410:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3390:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 234,
                                "name": "transaction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "3363:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                  "typeString": "struct Escrow.Contract storage pointer"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "3363:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3363:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3363:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3363:75:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 270,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "3607:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3607:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3631:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 273,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3643:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 269,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "3600:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$740_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IArbitrator,uint256,uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3600:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "3595:56:0"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2665:8:0"
            },
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2628:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2648:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:37:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2681:0:0"
            },
            "scope": 326,
            "src": "2614:1042:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3737:365:0",
              "statements": [
                {
                  "assignments": [
                    286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 286,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "3743:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 284,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "3743:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "3743:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "baseExpression": {
                      "id": 287,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3774:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 289,
                    "indexExpression": {
                      "id": 288,
                      "name": "_contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "3784:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3774:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3743:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 292,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "3810:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3810:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 294,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3832:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Resolved",
                          "nodeType": "MemberAccess",
                          "src": "3832:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "3810:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206e6f7420696e207265736f6c766564207374617465",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32",
                          "typeString": "literal_string \"Transaction not in resolved state\""
                        },
                        "value": "Transaction not in resolved state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32",
                          "typeString": "literal_string \"Transaction not in resolved state\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3802:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3802:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3802:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 301,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3899:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3899:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 303,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3913:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                "typeString": "struct Escrow.Contract storage pointer"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "3913:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3899:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 306,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3934:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3934:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 308,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3948:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                "typeString": "struct Escrow.Contract storage pointer"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "3948:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3934:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3899:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697264207061727469657320617265206e6f7420616c6c6f77656420746f207375626d69742065766964656e6365",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3967:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c",
                          "typeString": "literal_string \"Third parties are not allowed to submit evidence\""
                        },
                        "value": "Third parties are not allowed to submit evidence"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c",
                          "typeString": "literal_string \"Third parties are not allowed to submit evidence\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3891:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:127:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 316,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "4038:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "4038:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      {
                        "id": 318,
                        "name": "_contractID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "4062:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4075:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4075:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 321,
                        "name": "_evidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4087:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 315,
                      "name": "Evidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "4029:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$740_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IArbitrator,uint256,address,string memory)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4029:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "EmitStatement",
                  "src": "4024:73:0"
                }
              ]
            },
            "functionSelector": "a6a7f0eb",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3684:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3705:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:46:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3737:0:0"
            },
            "scope": 326,
            "src": "3660:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 327,
        "src": "177:3927:0"
      }
    ],
    "src": "36:4068:0"
  },
  "legacyAST": {
    "absolutePath": "/home/victor/kairos/backend/contracts/Escrow.sol",
    "exportedSymbols": {
      "Escrow": [
        326
      ],
      "IArbitrable": [
        644
      ],
      "IArbitrator": [
        740
      ],
      "IEvidence": [
        776
      ]
    },
    "id": 327,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IArbitrable.sol",
        "file": "./interfaces/IArbitrable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 645,
        "src": "61:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IArbitrator.sol",
        "file": "./interfaces/IArbitrator.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 741,
        "src": "100:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/victor/kairos/backend/contracts/interfaces/IEvidence.sol",
        "file": "./interfaces/IEvidence.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 327,
        "sourceUnit": 777,
        "src": "139:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IArbitrable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 644,
              "src": "196:11:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "196:11:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "IEvidence",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 776,
              "src": "209:9:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "209:9:0"
          }
        ],
        "contractDependencies": [
          644,
          776
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 326,
        "linearizedBaseContracts": [
          326,
          776,
          644
        ],
        "name": "Escrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Escrow.Status",
            "id": 13,
            "members": [
              {
                "id": 9,
                "name": "Initial",
                "nodeType": "EnumValue",
                "src": "236:7:0"
              },
              {
                "id": 10,
                "name": "Reclaimed",
                "nodeType": "EnumValue",
                "src": "245:9:0"
              },
              {
                "id": 11,
                "name": "Disputed",
                "nodeType": "EnumValue",
                "src": "256:8:0"
              },
              {
                "id": 12,
                "name": "Resolved",
                "nodeType": "EnumValue",
                "src": "266:8:0"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "223:52:0"
          },
          {
            "canonicalName": "Escrow.RulingOptions",
            "id": 17,
            "members": [
              {
                "id": 14,
                "name": "RefusedToArbitrate",
                "nodeType": "EnumValue",
                "src": "298:18:0"
              },
              {
                "id": 15,
                "name": "PayerWins",
                "nodeType": "EnumValue",
                "src": "318:9:0"
              },
              {
                "id": 16,
                "name": "PayeeWins",
                "nodeType": "EnumValue",
                "src": "329:9:0"
              }
            ],
            "name": "RulingOptions",
            "nodeType": "EnumDefinition",
            "src": "278:61:0"
          },
          {
            "constant": true,
            "id": 20,
            "mutability": "constant",
            "name": "numberOfRulingOptions",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "342:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "342:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "383:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "defaultArbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "525:87:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IArbitrator_$740",
              "typeString": "contract IArbitrator"
            },
            "typeName": {
              "id": 22,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21,
                "name": "IArbitrator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 740,
                "src": "525:11:0"
              },
              "referencedDeclaration": 740,
              "src": "525:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$740",
                "typeString": "contract IArbitrator"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836304232416266446661443963303837333234326635396632413863333241334363363832663830",
                  "id": 24,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "569:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x60B2AbfDfaD9c0873242f59f2A8c32A3Cc682f80"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 23,
                "name": "IArbitrator",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 740,
                "src": "557:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IArbitrator_$740_$",
                  "typeString": "type(contract IArbitrator)"
                }
              },
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "557:55:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IArbitrator_$740",
                "typeString": "contract IArbitrator"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Escrow.Contract",
            "id": 53,
            "members": [
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "payer",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "639:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "639:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "payee",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "666:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "arbitrator",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "693:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IArbitrator_$740",
                  "typeString": "contract IArbitrator"
                },
                "typeName": {
                  "id": 32,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 31,
                    "name": "IArbitrator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 740,
                    "src": "693:11:0"
                  },
                  "referencedDeclaration": 740,
                  "src": "693:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrator_$740",
                    "typeString": "contract IArbitrator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "721:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$13",
                  "typeString": "enum Escrow.Status"
                },
                "typeName": {
                  "id": 35,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 34,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 13,
                    "src": "721:6:0"
                  },
                  "referencedDeclaration": 13,
                  "src": "721:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$13",
                    "typeString": "enum Escrow.Status"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "740:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "disputeID",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "759:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "759:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "createdAt",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "782:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "reclaimedAt",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "805:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "payerFeeDeposit",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "830:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "830:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "payeeFeeDeposit",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "859:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "reclamationPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "888:25:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "888:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "arbitrationFeeDepositPeriod",
                "nodeType": "VariableDeclaration",
                "scope": 53,
                "src": "919:35:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "919:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Contract",
            "nodeType": "StructDefinition",
            "scope": 326,
            "src": "617:342:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "474da79a",
            "id": 57,
            "mutability": "mutable",
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "963:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
              "typeString": "struct Escrow.Contract[]"
            },
            "typeName": {
              "baseType": {
                "id": 55,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54,
                  "name": "Contract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "963:8:0"
                },
                "referencedDeclaration": 53,
                "src": "963:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                  "typeString": "struct Escrow.Contract"
                }
              },
              "id": 56,
              "nodeType": "ArrayTypeName",
              "src": "963:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage_ptr",
                "typeString": "struct Escrow.Contract[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "disputeIDtoContractID",
            "nodeType": "VariableDeclaration",
            "scope": 326,
            "src": "994:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1014:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1263:598:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 75,
                          "name": "contracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1289:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                            "typeString": "struct Escrow.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_metaEvidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1307:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 74,
                      "name": "MetaEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 751,
                      "src": "1276:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "EmitStatement",
                  "src": "1271:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 86,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1390:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1390:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1382:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 84,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1382:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1382:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 89,
                            "name": "_payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "1420:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 90,
                            "name": "defaultArbitrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1450:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IArbitrator_$740",
                              "typeString": "contract IArbitrator"
                            }
                          },
                          {
                            "expression": {
                              "id": 91,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1487:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                                "typeString": "type(enum Escrow.Status)"
                              }
                            },
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Initial",
                            "nodeType": "MemberAccess",
                            "src": "1487:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$13",
                              "typeString": "enum Escrow.Status"
                            }
                          },
                          {
                            "expression": {
                              "id": 93,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1520:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1520:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1552:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "id": 96,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1576:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1576:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1616:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1646:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1676:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 101,
                            "name": "_reclamationPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1708:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 102,
                            "name": "_arbitrationFeeDepositPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1767:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_contract$_IArbitrator_$740",
                              "typeString": "contract IArbitrator"
                            },
                            {
                              "typeIdentifier": "t_enum$_Status_$13",
                              "typeString": "enum Escrow.Status"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 83,
                          "name": "Contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1354:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Contract_$53_storage_ptr_$",
                            "typeString": "type(struct Escrow.Contract storage pointer)"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "payer",
                          "payee",
                          "arbitrator",
                          "status",
                          "value",
                          "disputeID",
                          "createdAt",
                          "reclaimedAt",
                          "payerFeeDeposit",
                          "payeeFeeDeposit",
                          "reclamationPeriod",
                          "arbitrationFeeDepositPeriod"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1354:452:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_memory_ptr",
                          "typeString": "struct Escrow.Contract memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Contract_$53_memory_ptr",
                          "typeString": "struct Escrow.Contract memory"
                        }
                      ],
                      "expression": {
                        "id": 80,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1330:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                          "typeString": "struct Escrow.Contract storage ref[] storage ref"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1330:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Contract_$53_storage_$returns$__$",
                        "typeString": "function (struct Escrow.Contract storage ref)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:484:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:484:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1823:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 107,
                          "name": "contracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1836:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                            "typeString": "struct Escrow.Contract storage ref[] storage ref"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1836:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1836:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1823:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:33:0"
                }
              ]
            },
            "functionSelector": "4e97202e",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1081:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_metaEvidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1109:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_reclamationPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1143:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_arbitrationFeeDepositPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1176:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:143:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1243:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:20:0"
            },
            "scope": 326,
            "src": "1049:812:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1915:545:0",
              "statements": [
                {
                  "assignments": [
                    121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1921:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 120,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 119,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "1921:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "1921:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 125,
                  "initialValue": {
                    "baseExpression": {
                      "id": 122,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1952:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 124,
                    "indexExpression": {
                      "id": 123,
                      "name": "_contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1962:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1952:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1921:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 127,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1988:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "1988:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 129,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2010:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Initial",
                          "nodeType": "MemberAccess",
                          "src": "2010:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "1988:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206973206e6f7420696e20696e697469616c207374617465",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040",
                          "typeString": "literal_string \"Transaction is not in initial state\""
                        },
                        "value": "Transaction is not in initial state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b572c8f2797204ddb86518f596981c1f24ac003b91a0493a2efa32bb0a6a040",
                          "typeString": "literal_string \"Transaction is not in initial state\""
                        }
                      ],
                      "id": 126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1980:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:84:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 135,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2147:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2147:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 137,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2161:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "payer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2161:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2147:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "nodeType": "IfStatement",
                  "src": "2143:167:0",
                  "trueBody": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "2180:130:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 141,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "2196:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2196:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 143,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 121,
                                    "src": "2214:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 144,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "createdAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 42,
                                  "src": "2214:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2196:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 146,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "2238:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reclamationPeriod",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50,
                                "src": "2238:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2196:71:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061796572207374696c6c206861732074696d6520746f207265636c61696d",
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2269:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744",
                                "typeString": "literal_string \"Payer still has time to reclaim\""
                              },
                              "value": "Payer still has time to reclaim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20b4f83e19717b0f5155b00a9e177de7c8fd309c3e3e588c48ef8846c27f0744",
                                "typeString": "literal_string \"Payer still has time to reclaim\""
                              }
                            ],
                            "id": 140,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2188:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2188:115:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151,
                        "nodeType": "ExpressionStatement",
                        "src": "2188:115:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 154,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2368:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2368:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2389:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                          "typeString": "type(enum Escrow.Status)"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Resolved",
                      "nodeType": "MemberAccess",
                      "src": "2389:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "src": "2368:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$13",
                      "typeString": "enum Escrow.Status"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 166,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2437:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "2437:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 161,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2410:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "payee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2410:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2410:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:45:0"
                }
              ]
            },
            "functionSelector": "4d68282f",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1887:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1886:21:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1915:0:0"
            },
            "scope": 326,
            "src": "1865:595:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              643
            ],
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2681:975:0",
              "statements": [
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "txID",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "2687:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "baseExpression": {
                      "id": 181,
                      "name": "disputeIDtoContractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2702:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 183,
                    "indexExpression": {
                      "id": 182,
                      "name": "_disputeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "2724:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2702:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2687:48:0"
                },
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 276,
                      "src": "2741:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 185,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "2741:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "2741:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "baseExpression": {
                      "id": 188,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "2772:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "id": 189,
                      "name": "txID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2782:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2772:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2741:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2873:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2873:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 197,
                                "name": "transaction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "2895:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                  "typeString": "struct Escrow.Contract storage pointer"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arbitrator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "2895:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IArbitrator_$740",
                                "typeString": "contract IArbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IArbitrator_$740",
                                "typeString": "contract IArbitrator"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2887:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2887:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2887:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2873:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652061726269747261746f722063616e206578656375746520612072756c696e67",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2920:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d",
                          "typeString": "literal_string \"Only the arbitrator can execute a ruling\""
                        },
                        "value": "Only the arbitrator can execute a ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713685a92e2410c8e78f4b2bb1fde42df8630ec809181348554f6b0481b71e5d",
                          "typeString": "literal_string \"Only the arbitrator can execute a ruling\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:98:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 205,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "3023:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3023:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 207,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3045:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Disputed",
                          "nodeType": "MemberAccess",
                          "src": "3045:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "3023:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686572652073686f756c642062652061206469737075746520746f206578656375746520612072756c696e67",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3062:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646",
                          "typeString": "literal_string \"There should be a dispute to execute a ruling\""
                        },
                        "value": "There should be a dispute to execute a ruling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5f9f5aa7e3eac45ac296f6c61fc57b123efb5e1ca0a903919767fc665dd0646",
                          "typeString": "literal_string \"There should be a dispute to execute a ruling\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3015:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3015:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:95:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 214,
                          "name": "_ruling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "3124:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 215,
                          "name": "numberOfRulingOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3135:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3124:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52756c696e67206f7574206f6620626f756e6473",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        },
                        "value": "Ruling out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8112d9e02feb92ca895ea089483dac2067bd15b7deb7e93f3ab2d5f025bb0650",
                          "typeString": "literal_string \"Ruling out of bounds\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3116:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:65:0"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 220,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3188:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract storage pointer"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "3188:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 223,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3209:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                          "typeString": "type(enum Escrow.Status)"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Resolved",
                      "nodeType": "MemberAccess",
                      "src": "3209:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$13",
                        "typeString": "enum Escrow.Status"
                      }
                    },
                    "src": "3188:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$13",
                      "typeString": "enum Escrow.Status"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 227,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "3310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 230,
                            "name": "RulingOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3329:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RulingOptions_$17_$",
                              "typeString": "type(enum Escrow.RulingOptions)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PayerWins",
                          "nodeType": "MemberAccess",
                          "src": "3329:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RulingOptions_$17",
                            "typeString": "enum Escrow.RulingOptions"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_RulingOptions_$17",
                            "typeString": "enum Escrow.RulingOptions"
                          }
                        ],
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3321:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3321:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3321:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3310:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 247,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3455:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 250,
                              "name": "RulingOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "3474:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RulingOptions_$17_$",
                                "typeString": "type(enum Escrow.RulingOptions)"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PayeeWins",
                            "nodeType": "MemberAccess",
                            "src": "3474:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RulingOptions_$17",
                              "typeString": "enum Escrow.RulingOptions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_RulingOptions_$17",
                              "typeString": "enum Escrow.RulingOptions"
                            }
                          ],
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 248,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3466:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3466:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3455:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 267,
                    "nodeType": "IfStatement",
                    "src": "3451:139:0",
                    "trueBody": {
                      "id": 266,
                      "nodeType": "Block",
                      "src": "3500:90:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 259,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "3535:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 260,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3535:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 261,
                                    "name": "transaction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "3555:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                      "typeString": "struct Escrow.Contract storage pointer"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payeeFeeDeposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "3555:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3535:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 254,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3508:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 257,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30,
                                "src": "3508:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "3508:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3508:75:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 265,
                          "nodeType": "ExpressionStatement",
                          "src": "3508:75:0"
                        }
                      ]
                    }
                  },
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "3306:284:0",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "3355:90:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 239,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3390:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 240,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38,
                                "src": "3390:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 241,
                                  "name": "transaction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "3410:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                    "typeString": "struct Escrow.Contract storage pointer"
                                  }
                                },
                                "id": 242,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payerFeeDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46,
                                "src": "3410:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3390:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 234,
                                "name": "transaction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "3363:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                  "typeString": "struct Escrow.Contract storage pointer"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "3363:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3363:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3363:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "3363:75:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 270,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "3607:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "3607:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3631:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 273,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3643:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 269,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "3600:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$740_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IArbitrator,uint256,uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3600:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "3595:56:0"
                }
              ]
            },
            "functionSelector": "311a6c56",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2665:8:0"
            },
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2628:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2648:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:37:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2681:0:0"
            },
            "scope": 326,
            "src": "2614:1042:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "3737:365:0",
              "statements": [
                {
                  "assignments": [
                    286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 286,
                      "mutability": "mutable",
                      "name": "transaction",
                      "nodeType": "VariableDeclaration",
                      "scope": 324,
                      "src": "3743:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                        "typeString": "struct Escrow.Contract"
                      },
                      "typeName": {
                        "id": 285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 284,
                          "name": "Contract",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53,
                          "src": "3743:8:0"
                        },
                        "referencedDeclaration": 53,
                        "src": "3743:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                          "typeString": "struct Escrow.Contract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 290,
                  "initialValue": {
                    "baseExpression": {
                      "id": 287,
                      "name": "contracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "3774:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Contract_$53_storage_$dyn_storage",
                        "typeString": "struct Escrow.Contract storage ref[] storage ref"
                      }
                    },
                    "id": 289,
                    "indexExpression": {
                      "id": 288,
                      "name": "_contractID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "3784:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3774:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Contract_$53_storage",
                      "typeString": "struct Escrow.Contract storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3743:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$13",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 292,
                            "name": "transaction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "3810:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                              "typeString": "struct Escrow.Contract storage pointer"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3810:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 294,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3832:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$13_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Resolved",
                          "nodeType": "MemberAccess",
                          "src": "3832:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$13",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "3810:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e206e6f7420696e207265736f6c766564207374617465",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32",
                          "typeString": "literal_string \"Transaction not in resolved state\""
                        },
                        "value": "Transaction not in resolved state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f4408d98328880a53f687b5bf0f8f5d9061fb254a6982cf80f6a2046479cf32",
                          "typeString": "literal_string \"Transaction not in resolved state\""
                        }
                      ],
                      "id": 291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3802:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3802:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3802:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 301,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3899:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3899:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 303,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3913:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                "typeString": "struct Escrow.Contract storage pointer"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "3913:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3899:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 306,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3934:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3934:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 308,
                              "name": "transaction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "3948:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                                "typeString": "struct Escrow.Contract storage pointer"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "3948:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3934:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3899:66:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697264207061727469657320617265206e6f7420616c6c6f77656420746f207375626d69742065766964656e6365",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3967:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c",
                          "typeString": "literal_string \"Third parties are not allowed to submit evidence\""
                        },
                        "value": "Third parties are not allowed to submit evidence"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215788400758c4d5f032baf69c9bcaa9884ca69f454969359d405a0e7b1cde5c",
                          "typeString": "literal_string \"Third parties are not allowed to submit evidence\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3891:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3891:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "3891:127:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 316,
                          "name": "transaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "4038:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Contract_$53_storage_ptr",
                            "typeString": "struct Escrow.Contract storage pointer"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arbitrator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33,
                        "src": "4038:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        }
                      },
                      {
                        "id": 318,
                        "name": "_contractID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "4062:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4075:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4075:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 321,
                        "name": "_evidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4087:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IArbitrator_$740",
                          "typeString": "contract IArbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 315,
                      "name": "Evidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "4029:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IArbitrator_$740_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IArbitrator,uint256,address,string memory)"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4029:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "EmitStatement",
                  "src": "4024:73:0"
                }
              ]
            },
            "functionSelector": "a6a7f0eb",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitEvidence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_contractID",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3684:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "3705:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:46:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3737:0:0"
            },
            "scope": 326,
            "src": "3660:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 327,
        "src": "177:3927:0"
      }
    ],
    "src": "36:4068:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-30T14:38:11.392Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "rule(uint256,uint256)": {
        "details": "Give a ruling for a dispute. Must be called by the arbitrator. The purpose of this function is to ensure that the address calling it has the right to rule on the contract.",
        "params": {
          "_disputeID": "ID of the dispute in the Arbitrator contract.",
          "_ruling": "Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\"."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}