[{"/home/victor/collancer1.1/client/src/index.js":"1","/home/victor/collancer1.1/client/src/App.js":"2","/home/victor/collancer1.1/client/src/reportWebVitals.js":"3","/home/victor/collancer1.1/client/src/components/Freelancer-list.js":"4","/home/victor/collancer1.1/client/src/components/Signup-Form.js":"5","/home/victor/collancer1.1/client/src/components/layout/Footer.js":"6","/home/victor/collancer1.1/client/src/components/views/Home.js":"7","/home/victor/collancer1.1/client/src/components/layout/Header.js":"8","/home/victor/collancer1.1/client/src/components/views/JobForm.js":"9","/home/victor/collancer1.1/client/src/components/Freelancer.js":"10","/home/victor/collancer1.1/client/src/components/Checkbox.js":"11","/home/victor/collancer1.1/client/src/components/UserIconDropDown.js":"12","/home/victor/collancer1.1/client/src/components/LogoutButton.js":"13","/home/victor/collancer1.1/client/src/components/search/BrowseGrid.js":"14","/home/victor/collancer1.1/client/src/components/Job/Job.js":"15","/home/victor/collancer1.1/client/src/components/search/CustomSearchBox.js":"16","/home/victor/collancer1.1/client/src/components/Job/JobDeck.js":"17","/home/victor/collancer1.1/client/src/components/Job/JobModalContent.js":"18","/home/victor/collancer1.1/client/src/components/Job/ItemList.js":"19","/home/victor/collancer1.1/client/src/components/dashboard/Dashboard.js":"20","/home/victor/collancer1.1/client/src/components/SignUpForm.js":"21","/home/victor/collancer1.1/client/src/components/layout/HomeHeader.js":"22","/home/victor/collancer1.1/client/src/components/AuthHelper.js":"23","/home/victor/collancer1.1/client/src/components/dashboard/PostsGrid.js":"24","/home/victor/collancer1.1/client/src/components/dashboard/Profile.js":"25","/home/victor/collancer1.1/client/src/components/dashboard/ActiveJob.js":"26"},{"size":1482,"mtime":1617470273495,"results":"27","hashOfConfig":"28"},{"size":1734,"mtime":1617470273491,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608261632597,"results":"30","hashOfConfig":"28"},{"size":919,"mtime":1608856985382,"results":"31","hashOfConfig":"28"},{"size":3305,"mtime":1612475879324,"results":"32","hashOfConfig":"33"},{"size":1675,"mtime":1617470273495,"results":"34","hashOfConfig":"28"},{"size":5026,"mtime":1617470273495,"results":"35","hashOfConfig":"28"},{"size":2434,"mtime":1617470273495,"results":"36","hashOfConfig":"28"},{"size":7067,"mtime":1617470273495,"results":"37","hashOfConfig":"28"},{"size":1003,"mtime":1617470273491,"results":"38","hashOfConfig":"28"},{"size":343,"mtime":1608927584798,"results":"39","hashOfConfig":"28"},{"size":928,"mtime":1617470273495,"results":"40","hashOfConfig":"28"},{"size":368,"mtime":1617470273491,"results":"41","hashOfConfig":"28"},{"size":2339,"mtime":1614012369903,"results":"42","hashOfConfig":"28"},{"size":3126,"mtime":1617470273491,"results":"43","hashOfConfig":"28"},{"size":2942,"mtime":1614012369903,"results":"44","hashOfConfig":"28"},{"size":347,"mtime":1614012369903,"results":"45","hashOfConfig":"28"},{"size":1036,"mtime":1614012369903,"results":"46","hashOfConfig":"28"},{"size":448,"mtime":1614012369903,"results":"47","hashOfConfig":"28"},{"size":3333,"mtime":1617470273495,"results":"48","hashOfConfig":"28"},{"size":3088,"mtime":1617470273491,"results":"49","hashOfConfig":"28"},{"size":1258,"mtime":1617470273495,"results":"50","hashOfConfig":"28"},{"size":2052,"mtime":1617470273491,"results":"51","hashOfConfig":"28"},{"size":602,"mtime":1617470273495,"results":"52","hashOfConfig":"28"},{"size":3546,"mtime":1617470273495,"results":"53","hashOfConfig":"28"},{"size":951,"mtime":1617470273495,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kahjhl",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"3g84y5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/home/victor/collancer1.1/client/src/index.js",[],"/home/victor/collancer1.1/client/src/App.js",[],["113","114"],"/home/victor/collancer1.1/client/src/reportWebVitals.js",[],"/home/victor/collancer1.1/client/src/components/Freelancer-list.js",[],"/home/victor/collancer1.1/client/src/components/Signup-Form.js",[],["115","116"],"/home/victor/collancer1.1/client/src/components/layout/Footer.js",[],"/home/victor/collancer1.1/client/src/components/views/Home.js",[],"/home/victor/collancer1.1/client/src/components/layout/Header.js",[],"/home/victor/collancer1.1/client/src/components/views/JobForm.js",[],"/home/victor/collancer1.1/client/src/components/Freelancer.js",[],"/home/victor/collancer1.1/client/src/components/Checkbox.js",[],"/home/victor/collancer1.1/client/src/components/UserIconDropDown.js",[],"/home/victor/collancer1.1/client/src/components/LogoutButton.js",["117"],"import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n  const { logout, isAuthenticated } = useAuth0();\n\n  return (\n    isAuthenticated && (\n      <a className=\"dropdown-item text-center\" onClick={() => logout({ returnTo: window.location.origin })}>\n        Log Out\n      </a>\n    )\n  )\n}\n\nexport default LogoutButton;","/home/victor/collancer1.1/client/src/components/search/BrowseGrid.js",[],"/home/victor/collancer1.1/client/src/components/Job/Job.js",["118","119"],"import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport JobModalContent from './JobModalContent';\nimport ItemList from './ItemList';\n\nexport default class Job extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// the description initially is an empty string\n\t\tthis.state = {\n\t\t\tdescription: '',\n      show: false\n\t\t};\n\n    this.handleShow = this.handleShow.bind(this);\n\t}\n\n\t/**\n\t * When job card is loaded, get the full length of the string from props, which has\n\t * the string stored in the index. Truncate the description if it is over max character,\n\t * then set state to truncated string.\n\t */\n\tcomponentDidMount() {\n\t\tconst MAX_LENGTH = 75;\n\t\tlet description = this.props.data.description;\n\n\t\t// if description is too long, truncate it down\n\t\tdescription = (description.length > MAX_LENGTH) ? \n\t\t\tdescription.substr(0, MAX_LENGTH) + '...' : description;\n\n\t\tthis.setState({\n\t\t\tdescription: description\n\t\t});\n\t}\n  \n  handleShow() {\n    this.setState({\n      show: !this.state.show\n    })\n  }\n\n\trender() {\n    const job = this.props.data;\n\t\treturn (\n\t\t\t<div className=\"col-3\">\n\t\t\t\t<div className=\"card m-0 mb-5 position-relative\">\n\t\t\t\t\t<div className=\"card-body\">\n            {/* Clicking anywhere on card triggers modal */}\n\t\t\t\t\t\t<a className=\"stretched-link\" onClick={this.handleShow} />\n\t\t\t\t\t\t<h5 className=\"card-title\">{job.title}</h5>\n\t\t\t\t\t\t<p className=\"card-text\" id=\"description\">{this.state.description}</p>\n\t\t\t\t\t\t<div className=\"row align-items-center \">\n\t\t\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t\t\t<ItemList items={job.paymentForms} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-3\">\n\t\t\t\t\t\t\t\t<p className=\"font-weight-bold text-center\" style={{'color': 'green'}}>${job.price}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row d-flex align-items-center position-absolute p-2\" style={{'bottom': 0, 'right': 25}}>\n\t\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t\t<p>[CLIENT NAME]</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        {this.state.show ? <JobModal handleShow={this.handleShow} show={true} jobData={job} /> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * This component is a modal popup that displays the job details, client profile, and an apply button\n * \n * @prop show - boolean indicating whether to display modal\n * @prop handleShow - handler function to change state of parent component\n * @prop jobData - job details to display\n */\nfunction JobModal(props) {\n  const handleClose = () => {\n    props.handleShow()\n  };\n\n  return (\n    <Modal size=\"xl\" show={props.show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Job Details</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <JobModalContent jobData={props.jobData} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","/home/victor/collancer1.1/client/src/components/search/CustomSearchBox.js",[],"/home/victor/collancer1.1/client/src/components/Job/JobDeck.js",[],"/home/victor/collancer1.1/client/src/components/Job/JobModalContent.js",[],"/home/victor/collancer1.1/client/src/components/Job/ItemList.js",[],"/home/victor/collancer1.1/client/src/components/dashboard/Dashboard.js",["120"],"import React, { useState, useEffect } from 'react'\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { getUserMetadata } from '../AuthHelper';\nimport axios from 'axios';\nimport Profile from './Profile';\nimport PostsGrid from './PostsGrid';\nimport { Link } from 'react-router-dom'\n\nexport default function Dashboard() {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [activePostings, setActivePostings] = useState([]);\n  const [profileData, setProfileData] = useState(null);\n\n  // effects run after every completed render, but can choose to fire only when certain values have changed\n  // ERROR: there is some issue with userMetadata being undefined, on the very first render. After refresh, it works\n  // The reason is probably it takes some time to update, so we need to wait until it is updated, before running\n  // this effect immediately\n  useEffect(() => {  \n    if (isAuthenticated) {\n      getUserMetadata(user, getAccessTokenSilently, setProfileData);\n    }\n  }, [getAccessTokenSilently, user, isAuthenticated]);\n\n  // on component mount, send a GET request to endpoint for user Jobs\n  // set the received jobs array to component state\n  useEffect(() => {\n    if (isAuthenticated) {\n      axios.get(`http://localhost:4000/dashboard?userID=${user.sub}`)\n        .then(res => setActivePostings(res.data))\n        .catch(err => console.error(err));\n    }\n\n    // cleanup function resets the state\n    return () => {\n      setActivePostings([]);\n    }\n  }, [isAuthenticated, user.sub]);\n\n  const renderPostGrid = (e) => {\n    switch (e.target.name) {\n      case 'active-jobs':\n    }\n  }\n  \n  return (\n    <div className=\"container-fluid mt-3\">\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <div className=\"navbar bg-light\">\n            <div className=\"nav-item\">\n              <Link to=\"\">Dashboard</Link>\n            </div>\n            <div className=\"nav-item\">\n              <Link to=\"\">Messages</Link>\n            </div>\n            <div className=\"nav-item\">\n              <Link to=\"\">Settings</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-7\">\n          <div className=\"navbar bg-light\">\n            <div className=\"nav-item\">\n              {/* they should be buttons which have onClick event, which then changes the state of PostsGrid accordingly */}\n              <button className=\"btn\" type=\"button\" name=\"active-jobs\" onClick={renderPostGrid}>Active Jobs</button>\n            </div>\n            <div className=\"nav-item\">\n              <button className=\"btn\" type=\"button\" name=\"active-postings\">Active Postings ({activePostings.length})</button>\n            </div>\n            <div className=\"nav-item\">\n            <button className=\"btn\" type=\"button\" name=\"completed-jobs\">Completed Jobs</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-1 align-items-center d-flex\">\n          <Link type=\"button\" to=\"/postjob\" className=\"btn btn-primary\">Post Job</Link>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <Profile userMetadata={profileData} setUserMetadata={setProfileData} />\n        </div>\n        <div className=\"col-8\">\n          <PostsGrid activePostings={activePostings} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/victor/collancer1.1/client/src/components/SignUpForm.js",[],"/home/victor/collancer1.1/client/src/components/layout/HomeHeader.js",[],"/home/victor/collancer1.1/client/src/components/AuthHelper.js",[],"/home/victor/collancer1.1/client/src/components/dashboard/PostsGrid.js",["121","122","123","124"],"import { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ActiveJob from './ActiveJob';\n\nexport default function PostsGrid(props) {\n  const activePostings = props.activePostings;\n\n  return (\n    <div className=\"jumbotron mt-3 p-2\">\n      <PostsList activePostings={activePostings} />\n    </div>\n  );\n  /* This is the number of posted jobs*/\n}\n\nconst PostsList = (props) => {\n  const postCards = props.activePostings.map((post, index) => (\n    <ActiveJob postDetails={post} key={index} />\n  ))\n\n  return <ul>{postCards}</ul>;\n}\n","/home/victor/collancer1.1/client/src/components/dashboard/Profile.js",[],"/home/victor/collancer1.1/client/src/components/dashboard/ActiveJob.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":7,"nodeType":"133","endLine":9,"endColumn":109},{"ruleId":"134","severity":1,"message":"135","line":55,"column":7,"nodeType":"133","endLine":55,"endColumn":65},{"ruleId":"131","severity":1,"message":"132","line":55,"column":7,"nodeType":"133","endLine":55,"endColumn":65},{"ruleId":"136","severity":1,"message":"137","line":40,"column":5,"nodeType":"138","messageId":"139","endLine":42,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":18},{"ruleId":"140","severity":1,"message":"144","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":3,"column":17,"nodeType":"142","messageId":"143","endLine":3,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":3,"column":27,"nodeType":"142","messageId":"143","endLine":3,"endColumn":36},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'useAuth0' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]