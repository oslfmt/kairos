[{"/home/victor/collancer1.1/client/src/index.js":"1","/home/victor/collancer1.1/client/src/App.js":"2","/home/victor/collancer1.1/client/src/reportWebVitals.js":"3","/home/victor/collancer1.1/client/src/components/Freelancer-list.js":"4","/home/victor/collancer1.1/client/src/components/Signup-Form.js":"5","/home/victor/collancer1.1/client/src/components/layout/Footer.js":"6","/home/victor/collancer1.1/client/src/components/views/Home.js":"7","/home/victor/collancer1.1/client/src/components/layout/Header.js":"8","/home/victor/collancer1.1/client/src/components/views/JobForm.js":"9","/home/victor/collancer1.1/client/src/components/Freelancer.js":"10","/home/victor/collancer1.1/client/src/components/Checkbox.js":"11","/home/victor/collancer1.1/client/src/components/UserIconDropDown.js":"12","/home/victor/collancer1.1/client/src/components/LogoutButton.js":"13","/home/victor/collancer1.1/client/src/components/search/BrowseGrid.js":"14","/home/victor/collancer1.1/client/src/components/Job/Job.js":"15","/home/victor/collancer1.1/client/src/components/search/CustomSearchBox.js":"16","/home/victor/collancer1.1/client/src/components/Job/JobDeck.js":"17","/home/victor/collancer1.1/client/src/components/Job/JobModalContent.js":"18","/home/victor/collancer1.1/client/src/components/Job/ItemList.js":"19","/home/victor/collancer1.1/client/src/components/dashboard/Dashboard.js":"20","/home/victor/collancer1.1/client/src/components/dashboard/Profile.js":"21","/home/victor/collancer1.1/client/src/components/dashboard/ActiveJob.js":"22","/home/victor/collancer1.1/client/src/components/dashboard/PostsGrid.js":"23","/home/victor/collancer1.1/client/src/components/layout/HomeHeader.js":"24"},{"size":1306,"mtime":1616010547268,"results":"25","hashOfConfig":"26"},{"size":1631,"mtime":1614223496281,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1608261632597,"results":"28","hashOfConfig":"26"},{"size":919,"mtime":1608856985382,"results":"29","hashOfConfig":"26"},{"size":3305,"mtime":1612475879324,"results":"30","hashOfConfig":"31"},{"size":583,"mtime":1614012369903,"results":"32","hashOfConfig":"26"},{"size":5026,"mtime":1614221592036,"results":"33","hashOfConfig":"26"},{"size":2434,"mtime":1614271691107,"results":"34","hashOfConfig":"26"},{"size":6485,"mtime":1614012369907,"results":"35","hashOfConfig":"26"},{"size":1003,"mtime":1614022832140,"results":"36","hashOfConfig":"26"},{"size":343,"mtime":1608927584798,"results":"37","hashOfConfig":"26"},{"size":698,"mtime":1614221942643,"results":"38","hashOfConfig":"26"},{"size":368,"mtime":1614221704627,"results":"39","hashOfConfig":"26"},{"size":2339,"mtime":1614012369903,"results":"40","hashOfConfig":"26"},{"size":3097,"mtime":1614015597565,"results":"41","hashOfConfig":"26"},{"size":2942,"mtime":1614012369903,"results":"42","hashOfConfig":"26"},{"size":347,"mtime":1614012369903,"results":"43","hashOfConfig":"26"},{"size":1036,"mtime":1614012369903,"results":"44","hashOfConfig":"26"},{"size":448,"mtime":1614012369903,"results":"45","hashOfConfig":"26"},{"size":3723,"mtime":1616012203616,"results":"46","hashOfConfig":"26"},{"size":2626,"mtime":1616009787163,"results":"47","hashOfConfig":"26"},{"size":910,"mtime":1614272317304,"results":"48","hashOfConfig":"26"},{"size":386,"mtime":1614272102288,"results":"49","hashOfConfig":"26"},{"size":1302,"mtime":1614721464531,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1kahjhl",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"3g84y5",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/home/victor/collancer1.1/client/src/index.js",[],["108","109"],"/home/victor/collancer1.1/client/src/App.js",[],"/home/victor/collancer1.1/client/src/reportWebVitals.js",[],"/home/victor/collancer1.1/client/src/components/Freelancer-list.js",[],"/home/victor/collancer1.1/client/src/components/Signup-Form.js",[],["110","111"],"/home/victor/collancer1.1/client/src/components/layout/Footer.js",[],"/home/victor/collancer1.1/client/src/components/views/Home.js",[],"/home/victor/collancer1.1/client/src/components/layout/Header.js",[],"/home/victor/collancer1.1/client/src/components/views/JobForm.js",[],"/home/victor/collancer1.1/client/src/components/Freelancer.js",[],"/home/victor/collancer1.1/client/src/components/Checkbox.js",[],"/home/victor/collancer1.1/client/src/components/UserIconDropDown.js",[],"/home/victor/collancer1.1/client/src/components/LogoutButton.js",["112"],"import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n  const { logout, isAuthenticated } = useAuth0();\n\n  return (\n    isAuthenticated && (\n      <a className=\"dropdown-item text-center\" onClick={() => logout({ returnTo: window.location.origin })}>\n        Log Out\n      </a>\n    )\n  )\n}\n\nexport default LogoutButton;",["113","114"],"/home/victor/collancer1.1/client/src/components/search/BrowseGrid.js",[],"/home/victor/collancer1.1/client/src/components/Job/Job.js",["115","116"],"import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport JobModalContent from './JobModalContent';\nimport ItemList from './ItemList';\n\n/**\n * This component renders a Job card on the browse page. It is a card that displays simple info\n * that is relevant to the particular job.\n */\nexport default class Job extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// the description initially is an empty string\n\t\tthis.state = {\n\t\t\tdescription: '',\n      show: false\n\t\t};\n\n    this.handleShow = this.handleShow.bind(this);\n\t}\n\n\t/**\n\t * When job card is loaded, get the full length of the string from props, which has\n\t * the string stored in the index. Truncate the description if it is over max character,\n\t * then set state to truncated string.\n\t */\n\tcomponentDidMount() {\n\t\tconst MAX_LENGTH = 75;\n\t\tlet description = this.props.data.description;\n\n\t\t// if description is too long, truncate it down\n\t\tdescription = (description.length > MAX_LENGTH) ? \n\t\t\tdescription.substr(0, MAX_LENGTH) + '...' : description;\n\n\t\tthis.setState({\n\t\t\tdescription: description\n\t\t});\n\t}\n  \n  handleShow() {\n    this.setState({\n      show: !this.state.show\n    })\n  }\n\n\trender() {\n    const job = this.props.data;\n\t\treturn (\n\t\t\t<div className=\"col-3\">\n\t\t\t\t<div className=\"card m-0 mb-5 position-relative\">\n\t\t\t\t\t<div className=\"card-body\">\n            {/* Clicking anywhere on card triggers modal */}\n\t\t\t\t\t\t<a className=\"stretched-link\" onClick={this.handleShow} />\n\t\t\t\t\t\t<h5 className=\"card-title\">{job.title}</h5>\n\t\t\t\t\t\t<p className=\"card-text\" id=\"description\">{this.state.description}</p>\n\t\t\t\t\t\t<div className=\"row align-items-center \">\n\t\t\t\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t\t\t\t<ItemList items={job.paymentForms} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-3\">\n\t\t\t\t\t\t\t\t<p className=\"font-weight-bold text-center\" style={{'color': 'green'}}>${job.price}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"row d-flex align-items-center position-absolute p-2\" style={{'bottom': 0, 'right': 25}}>\n\t\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t\t<p>[CLIENT NAME]</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        {this.state.show ? <JobModal handleShow={this.handleShow} show={true} jobData={job} /> : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * This component is a modal popup that displays the job details, client profile, and an apply button\n * \n * @prop show - boolean indicating whether to display modal\n * @prop handleShow - handler function to change state of parent component\n * @prop jobData - job details to display\n */\nfunction JobModal(props) {\n  const handleClose = () => {\n    props.handleShow()\n  };\n\n  return (\n    <Modal size=\"xl\" show={props.show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Job Details</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <JobModalContent jobData={props.jobData} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}","/home/victor/collancer1.1/client/src/components/search/CustomSearchBox.js",[],"/home/victor/collancer1.1/client/src/components/Job/JobDeck.js",[],"/home/victor/collancer1.1/client/src/components/Job/JobModalContent.js",[],"/home/victor/collancer1.1/client/src/components/Job/ItemList.js",[],"/home/victor/collancer1.1/client/src/components/dashboard/Dashboard.js",["117"],"import React, { Component, useState } from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Profile from './Profile';\nimport PostsGrid from './PostsGrid';\nimport Form from 'react-bootstrap/Form'\nimport { useAuth0 } from '@auth0/auth0-react';\nconst axios = require('axios').default;\n\nexport default class Dashboard extends Component {\n  render() {\n    return (\n      <Container className=\"mt-3\" fluid>\n        <Row>\n          <Col sm={4}>\n            <Navbar bg=\"light\" variant=\"dark\">\n              <Nav.Link>Dashboard</Nav.Link>\n              <Nav.Link>Messages</Nav.Link>\n              <Nav.Link>Settings</Nav.Link>\n            </Navbar>\n          </Col>\n          <Col sm={7}>\n            <Navbar bg=\"light\" variant=\"dark\">\n              <Nav.Link>Active Jobs (3)</Nav.Link>\n              <Nav.Link>Active Postings (2)</Nav.Link>\n              <Nav.Link>Completed Jobs (1)</Nav.Link>\n            </Navbar>\n          </Col>\n          <Col sm={1} className=\"align-items-center d-flex\">\n            <Button>Post Job</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={4}>\n            <Profile />\n          </Col>\n          <Col sm={8}>\n            {/* <PostsGrid /> */}\n            <GetStartedForm />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n/**\n * A form that first time users fill out to get their basic account set up\n * When submit button is clicked:\n * 1. Form disappears\n * 2. All user data is sent and stored on current user Auth0 account object. Probably the user_metadata\n * 3. The new dashboard reflects the new changes\n */\nconst GetStartedForm = () => {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [username, setUsername] = useState('');\n  // const []\n  const domain = \"collancer-dev.us.auth0.com\";\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (isAuthenticated) {\n      getAccessTokenSilently({\n        audience: `https://${domain}/api/v2/`,\n        scope: \"read:current_user create:current_user_metadata\",\n      })\n      .then(accessToken => {\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n\n        const options = {\n          method: 'PATCH',\n          url: userDetailsByIdUrl,\n          headers: {\n            authorization: `Bearer ${accessToken}`,\n            'content-type': 'application/json'\n          },\n          data: {\n            user_metadata: {\n              \"username\": \"testuser\",\n              \"organization\": \"organization here\",\n              \"description\": \"description....\",\n            }\n          }\n        }\n        \n        axios.request(options).then(res => {\n          console.log(res.data);\n        }).catch(err => {\n          console.error(err);\n        });\n      })\n      .catch(error => console.error(error));\n    }\n  }\n\n  const handleInput = (e) => {\n    const userInput = e.target.value;\n    console.log(e.target.name);\n    \n    setUsername(userInput);\n  }\n\n  return (\n    <Form className=\"m-3 p-3 bg-light\">\n      <h3>Please Enter some info to set up your account:</h3>\n      <Form.Group>\n        <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={handleInput}/>\n      </Form.Group>\n      <Form.Group>\n        <Form.Control type=\"text\" placeholder=\"Organization\" />\n      </Form.Group>\n      <Form.Group>\n        <Form.Control as=\"textarea\" rows={3} placeholder=\"Description\" />\n      </Form.Group>\n      <Button type=\"submit\" onClick={handleSubmit}>Submit</Button>\n    </Form>\n  );\n}\n","/home/victor/collancer1.1/client/src/components/dashboard/Profile.js",["118"],"import React, {useState, useEffect} from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl';\n\nexport default function Profile() {\n  const { user, isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [userMetadata, setUserMetadata] = useState(null);\n  const domain = \"collancer-dev.us.auth0.com\";\n\n  // effects run after every completed render, but can choose to fire only when certain values have changed\n  useEffect(() => {\n    const getUserMetadata = async () => {\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: `https://${domain}/api/v2/`,\n          scope: \"read:current_user\",\n        });\n\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n  \n        const metadataResponse = await fetch(userDetailsByIdUrl, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n\n        const user_metadata = await metadataResponse.json();\n        setUserMetadata(user_metadata);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n  \n    if (isAuthenticated) {\n      getUserMetadata();\n    }\n  }, [user]);\n  \n  return (\n    isAuthenticated && (\n      <Card className=\"bg-white shadow rounded overflow-hidden mt-3 mb-4\">\n        <div className=\"px-4 pt-0 pb-4 cover-profile\">\n          <div className=\"media align-items-end profile-head-profile\">\n            <div className=\"profile mr-3\">\n              <img className=\"rounded-circle rounded mb-1 img-thumbnail\" style={{height: \"auto\", width: \"auto\"}} src={user.picture} alt={user.name}/>\n            </div>\n            <div className=\"media-body mb-5 text-white\">\n              <h4 className=\"mt-0 mb-0\">{user.nickname}</h4>\n              <p className=\"midium mb-4\"><i className=\"fas fa-map-marker-alt mr-2\"></i>Truman State University</p>\n            </div>\n          </div>\n        </div>\n        <Card.Body>\n          <Card.Text className=\"mt-5\">\n            Profile Info\n            <InputGroup>\n              <FormControl\n                placeholder={userMetadata ? userMetadata.app_metadata.roles[0] : null}\n                readOnly\n              />\n            </InputGroup>\n            Client Reputation: 100pts\n            Jobs Completed: 5\n            Date Joined: Feb 10 2021\n          </Card.Text>\n          <Button className=\"btn btn-sm\" style={{'float': 'right'}}>Edit Profile</Button>\n        </Card.Body>\n      </Card>\n    )\n  );\n}\n","/home/victor/collancer1.1/client/src/components/dashboard/ActiveJob.js",["119"],"import React, { Component } from 'react';\nimport Card from 'react-bootstrap/esm/Card';\nimport { Link } from 'react-router-dom';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button'\n\nexport default class ActiveJob extends Component {\n  render() {\n    return (\n      <Card className=\"shadow m-3\">\n        <Card.Header>JOB TITLE</Card.Header>\n        <Card.Body>\n          <Row>\n            <Col sm={8}>\n              <Card.Text>\n                Description text goes here.........\n              </Card.Text>\n            </Col>\n            <Col sm={4} className=\"flex-column d-flex\">\n              <div>\n                <p>Freelancer Name</p>\n              </div>\n              <Button className=\"mb-2\">Chat</Button>\n              <Button>Pay to Escrow</Button>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    )\n  }\n}","/home/victor/collancer1.1/client/src/components/dashboard/PostsGrid.js",["120"],"import React, { Component } from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport ActiveJob from './ActiveJob'\n\nexport default class PostsGrid extends Component {\n  render() {\n    return (\n      <Jumbotron className=\"mt-3 p-2\">\n        <ActiveJob />\n        <ActiveJob />\n        <ActiveJob />\n      </Jumbotron>\n    );\n  }\n}\n","/home/victor/collancer1.1/client/src/components/layout/HomeHeader.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":9,"column":7,"nodeType":"129","endLine":9,"endColumn":109},{"ruleId":"121","replacedBy":"130"},{"ruleId":"123","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":55,"column":7,"nodeType":"129","endLine":55,"endColumn":65},{"ruleId":"127","severity":1,"message":"128","line":55,"column":7,"nodeType":"129","endLine":55,"endColumn":65},{"ruleId":"134","severity":1,"message":"135","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":40,"column":6,"nodeType":"140","endLine":40,"endColumn":12,"suggestions":"141"},{"ruleId":"134","severity":1,"message":"142","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"143","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["144"],["145"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-unused-vars","'PostsGrid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAccessTokenSilently' and 'isAuthenticated'. Either include them or remove the dependency array.","ArrayExpression",["146"],"'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [getAccessTokenSilently, isAuthenticated, user]",{"range":"149","text":"150"},[1324,1330],"[getAccessTokenSilently, isAuthenticated, user]"]